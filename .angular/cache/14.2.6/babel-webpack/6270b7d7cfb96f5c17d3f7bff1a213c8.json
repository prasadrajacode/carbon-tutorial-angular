{"ast":null,"code":"/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-placeholder.js\n *\n * Copyright 2014, 2022 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Injectable, Component, ViewContainerRef, ViewChild, Input, NgModule, SkipSelf, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * Singleton service used to register the container for out-of-flow components to insert into.\n * Also used to insert/remove components from that view.\n */\n\nimport * as ɵngcc0 from '@angular/core';\nconst _c0 = [\"placeholder\"];\n\nclass PlaceholderService {\n  constructor() {\n    /**\n     * Main `ViewContainerRef` to insert components into\n     */\n    this.viewContainerRef = null;\n    /**\n     * Map of id's to secondary `ViewContainerRef`s\n     */\n\n    this.viewContainerMap = new Map();\n  }\n  /**\n   * Used by `Placeholder` to register view-container reference.\n   */\n\n\n  registerViewContainerRef(vcRef, id) {\n    if (id) {\n      this.viewContainerMap.set(id, vcRef);\n    } else {\n      this.viewContainerRef = vcRef;\n    }\n  }\n  /**\n   * Creates and returns component in the view.\n   */\n\n\n  createComponent(componentFactory, injector, id) {\n    if (id) {\n      if (!this.viewContainerMap.has(id)) {\n        console.error(`No view container with id ${id} found`);\n        return;\n      }\n\n      return this.viewContainerMap.get(id).createComponent(componentFactory, this.viewContainerMap.size, injector);\n    }\n\n    if (!this.viewContainerRef) {\n      console.error(\"No view container defined! Likely due to a missing `ibm-placeholder`\");\n      return;\n    }\n\n    return this.viewContainerRef.createComponent(componentFactory, this.viewContainerRef.length, injector);\n  }\n\n  destroyComponent(component) {\n    component.destroy();\n  }\n\n  hasComponentRef(component, id) {\n    if (id) {\n      return !(this.viewContainerMap.get(id).indexOf(component.hostView) < 0);\n    }\n\n    return !(this.viewContainerRef.indexOf(component.hostView) < 0);\n  }\n\n  hasPlaceholderRef(id) {\n    if (id) {\n      return this.viewContainerMap.has(id);\n    }\n\n    return !!this.viewContainerRef;\n  }\n\n  appendElement(element, id) {\n    if (id) {\n      return this.viewContainerMap.get(id).element.nativeElement.appendChild(element);\n    }\n\n    return this.viewContainerRef.element.nativeElement.appendChild(element);\n  }\n\n  removeElement(element, id) {\n    if (id) {\n      return this.viewContainerMap.get(id).element.nativeElement.removeChild(element);\n    }\n\n    return this.viewContainerRef.element.nativeElement.removeChild(element);\n  }\n\n  hasElement(element, id) {\n    if (id) {\n      return this.viewContainerMap.get(id).element.nativeElement.contains(element);\n    }\n\n    return this.viewContainerRef.element.nativeElement.contains(element);\n  }\n\n}\n\nPlaceholderService.ɵfac = function PlaceholderService_Factory(t) {\n  return new (t || PlaceholderService)();\n};\n\nPlaceholderService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: PlaceholderService,\n  factory: PlaceholderService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlaceholderService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * Using a modal, dialog (Tooltip, OverflowMenu), or any other component that draws out of the normal page flow\n * in your application *requires* this component (`ibm-placeholder`).\n * It would generally be placed near the end of your root app component template\n * (app.component.ts or app.component.html) as:\n *\n * ```\n * <ibm-placeholder></ibm-placeholder>\n * ```\n */\n\n\nclass Placeholder {\n  /**\n   * Creates an instance of `Placeholder`.\n   */\n  constructor(placeholderService) {\n    this.placeholderService = placeholderService;\n  }\n  /**\n   * Registers the components view with `PlaceholderService`\n   */\n\n\n  ngOnInit() {\n    // TODO use `id` to register with the placeholderService\n    this.placeholderService.registerViewContainerRef(this.viewContainerRef);\n  }\n\n}\n\nPlaceholder.ɵfac = function Placeholder_Factory(t) {\n  return new (t || Placeholder)(ɵngcc0.ɵɵdirectiveInject(PlaceholderService));\n};\n\nPlaceholder.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: Placeholder,\n  selectors: [[\"ibm-placeholder\"]],\n  viewQuery: function Placeholder_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.viewContainerRef = _t.first);\n    }\n  },\n  inputs: {\n    id: \"id\"\n  },\n  decls: 2,\n  vars: 0,\n  consts: [[\"placeholder\", \"\"]],\n  template: function Placeholder_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    }\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nPlaceholder.ctorParameters = () => [{\n  type: PlaceholderService\n}];\n\nPlaceholder.propDecorators = {\n  id: [{\n    type: Input\n  }],\n  viewContainerRef: [{\n    type: ViewChild,\n    args: [\"placeholder\", {\n      read: ViewContainerRef,\n      static: true\n    }]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Placeholder, [{\n    type: Component,\n    args: [{\n      selector: \"ibm-placeholder\",\n      template: `<div #placeholder></div>`\n    }]\n  }], function () {\n    return [{\n      type: PlaceholderService\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    viewContainerRef: [{\n      type: ViewChild,\n      args: [\"placeholder\", {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }]\n  });\n})(); // modules\n// either provides a new instance of PlaceholderService, or returns the parent\n\n\nfunction PLACEHOLDER_SERVICE_PROVIDER_FACTORY(parentService) {\n  return parentService || new PlaceholderService();\n} // placeholder service *must* be a singleton to ensure the placeholder viewRef is accessible globally\n\n\nconst PLACEHOLDER_SERVICE_PROVIDER = {\n  provide: PlaceholderService,\n  deps: [[new Optional(), new SkipSelf(), PlaceholderService]],\n  useFactory: PLACEHOLDER_SERVICE_PROVIDER_FACTORY\n};\n\nclass PlaceholderModule {}\n\nPlaceholderModule.ɵfac = function PlaceholderModule_Factory(t) {\n  return new (t || PlaceholderModule)();\n};\n\nPlaceholderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: PlaceholderModule\n});\nPlaceholderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [PLACEHOLDER_SERVICE_PROVIDER],\n  imports: [CommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlaceholderModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [Placeholder],\n      exports: [Placeholder],\n      providers: [PLACEHOLDER_SERVICE_PROVIDER],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PlaceholderModule, {\n    declarations: function () {\n      return [Placeholder];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [Placeholder];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Placeholder, PLACEHOLDER_SERVICE_PROVIDER_FACTORY, PLACEHOLDER_SERVICE_PROVIDER, PlaceholderModule, PlaceholderService };","map":{"version":3,"names":["Injectable","Component","ViewContainerRef","ViewChild","Input","NgModule","SkipSelf","Optional","CommonModule","ɵngcc0","_c0","PlaceholderService","constructor","viewContainerRef","viewContainerMap","Map","registerViewContainerRef","vcRef","id","set","createComponent","componentFactory","injector","has","console","error","get","size","length","destroyComponent","component","destroy","hasComponentRef","indexOf","hostView","hasPlaceholderRef","appendElement","element","nativeElement","appendChild","removeElement","removeChild","hasElement","contains","ɵfac","PlaceholderService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","Placeholder","placeholderService","ngOnInit","Placeholder_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","Placeholder_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","inputs","decls","vars","consts","template","Placeholder_Template","ɵɵelement","encapsulation","ctorParameters","propDecorators","args","read","static","selector","PLACEHOLDER_SERVICE_PROVIDER_FACTORY","parentService","PLACEHOLDER_SERVICE_PROVIDER","provide","deps","useFactory","PlaceholderModule","PlaceholderModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["/Users/TSC/Desktop/Angular-Carbon/carbon-tutorial-angular/node_modules/carbon-components-angular/__ivy_ngcc__/fesm2015/carbon-components-angular-placeholder.js"],"sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-placeholder.js\n *\n * Copyright 2014, 2022 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Injectable, Component, ViewContainerRef, ViewChild, Input, NgModule, SkipSelf, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Singleton service used to register the container for out-of-flow components to insert into.\n * Also used to insert/remove components from that view.\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"placeholder\"];\nclass PlaceholderService {\n    constructor() {\n        /**\n         * Main `ViewContainerRef` to insert components into\n         */\n        this.viewContainerRef = null;\n        /**\n         * Map of id's to secondary `ViewContainerRef`s\n         */\n        this.viewContainerMap = new Map();\n    }\n    /**\n     * Used by `Placeholder` to register view-container reference.\n     */\n    registerViewContainerRef(vcRef, id) {\n        if (id) {\n            this.viewContainerMap.set(id, vcRef);\n        }\n        else {\n            this.viewContainerRef = vcRef;\n        }\n    }\n    /**\n     * Creates and returns component in the view.\n     */\n    createComponent(componentFactory, injector, id) {\n        if (id) {\n            if (!this.viewContainerMap.has(id)) {\n                console.error(`No view container with id ${id} found`);\n                return;\n            }\n            return this.viewContainerMap.get(id).createComponent(componentFactory, this.viewContainerMap.size, injector);\n        }\n        if (!this.viewContainerRef) {\n            console.error(\"No view container defined! Likely due to a missing `ibm-placeholder`\");\n            return;\n        }\n        return this.viewContainerRef.createComponent(componentFactory, this.viewContainerRef.length, injector);\n    }\n    destroyComponent(component) {\n        component.destroy();\n    }\n    hasComponentRef(component, id) {\n        if (id) {\n            return !(this.viewContainerMap.get(id).indexOf(component.hostView) < 0);\n        }\n        return !(this.viewContainerRef.indexOf(component.hostView) < 0);\n    }\n    hasPlaceholderRef(id) {\n        if (id) {\n            return this.viewContainerMap.has(id);\n        }\n        return !!this.viewContainerRef;\n    }\n    appendElement(element, id) {\n        if (id) {\n            return this.viewContainerMap.get(id).element.nativeElement.appendChild(element);\n        }\n        return this.viewContainerRef.element.nativeElement.appendChild(element);\n    }\n    removeElement(element, id) {\n        if (id) {\n            return this.viewContainerMap.get(id).element.nativeElement.removeChild(element);\n        }\n        return this.viewContainerRef.element.nativeElement.removeChild(element);\n    }\n    hasElement(element, id) {\n        if (id) {\n            return this.viewContainerMap.get(id).element.nativeElement.contains(element);\n        }\n        return this.viewContainerRef.element.nativeElement.contains(element);\n    }\n}\nPlaceholderService.ɵfac = function PlaceholderService_Factory(t) { return new (t || PlaceholderService)(); };\nPlaceholderService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PlaceholderService, factory: PlaceholderService.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlaceholderService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\n/**\n * Using a modal, dialog (Tooltip, OverflowMenu), or any other component that draws out of the normal page flow\n * in your application *requires* this component (`ibm-placeholder`).\n * It would generally be placed near the end of your root app component template\n * (app.component.ts or app.component.html) as:\n *\n * ```\n * <ibm-placeholder></ibm-placeholder>\n * ```\n */\nclass Placeholder {\n    /**\n     * Creates an instance of `Placeholder`.\n     */\n    constructor(placeholderService) {\n        this.placeholderService = placeholderService;\n    }\n    /**\n     * Registers the components view with `PlaceholderService`\n     */\n    ngOnInit() {\n        // TODO use `id` to register with the placeholderService\n        this.placeholderService.registerViewContainerRef(this.viewContainerRef);\n    }\n}\nPlaceholder.ɵfac = function Placeholder_Factory(t) { return new (t || Placeholder)(ɵngcc0.ɵɵdirectiveInject(PlaceholderService)); };\nPlaceholder.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: Placeholder, selectors: [[\"ibm-placeholder\"]], viewQuery: function Placeholder_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.viewContainerRef = _t.first);\n    } }, inputs: { id: \"id\" }, decls: 2, vars: 0, consts: [[\"placeholder\", \"\"]], template: function Placeholder_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    } }, encapsulation: 2 });\n/** @nocollapse */\nPlaceholder.ctorParameters = () => [\n    { type: PlaceholderService }\n];\nPlaceholder.propDecorators = {\n    id: [{ type: Input }],\n    viewContainerRef: [{ type: ViewChild, args: [\"placeholder\", { read: ViewContainerRef, static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Placeholder, [{\n        type: Component,\n        args: [{\n                selector: \"ibm-placeholder\",\n                template: `<div #placeholder></div>`\n            }]\n    }], function () { return [{ type: PlaceholderService }]; }, { id: [{\n            type: Input\n        }], viewContainerRef: [{\n            type: ViewChild,\n            args: [\"placeholder\", { read: ViewContainerRef, static: true }]\n        }] }); })();\n\n// modules\n// either provides a new instance of PlaceholderService, or returns the parent\nfunction PLACEHOLDER_SERVICE_PROVIDER_FACTORY(parentService) {\n    return parentService || new PlaceholderService();\n}\n// placeholder service *must* be a singleton to ensure the placeholder viewRef is accessible globally\nconst PLACEHOLDER_SERVICE_PROVIDER = {\n    provide: PlaceholderService,\n    deps: [[new Optional(), new SkipSelf(), PlaceholderService]],\n    useFactory: PLACEHOLDER_SERVICE_PROVIDER_FACTORY\n};\nclass PlaceholderModule {\n}\nPlaceholderModule.ɵfac = function PlaceholderModule_Factory(t) { return new (t || PlaceholderModule)(); };\nPlaceholderModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: PlaceholderModule });\nPlaceholderModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [PLACEHOLDER_SERVICE_PROVIDER], imports: [CommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlaceholderModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [Placeholder],\n                exports: [Placeholder],\n                providers: [PLACEHOLDER_SERVICE_PROVIDER],\n                imports: [CommonModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PlaceholderModule, { declarations: function () { return [Placeholder]; }, imports: function () { return [CommonModule]; }, exports: function () { return [Placeholder]; } }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Placeholder, PLACEHOLDER_SERVICE_PROVIDER_FACTORY, PLACEHOLDER_SERVICE_PROVIDER, PlaceholderModule, PlaceholderService };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}