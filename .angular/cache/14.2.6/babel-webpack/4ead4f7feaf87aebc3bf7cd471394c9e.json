{"ast":null,"code":"/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-i18n.js\n *\n * Copyright 2014, 2022 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BehaviorSubject, isObservable, iif } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { merge } from 'carbon-components-angular/utils';\nimport { Injectable, Pipe, NgModule, SkipSelf, Optional } from '@angular/core';\nimport * as Éµngcc0 from '@angular/core';\nvar EN = {\n  \"BANNER\": {\n    \"CLOSE_BUTTON\": \"Close alert banner\"\n  },\n  \"BREADCRUMB\": {\n    \"LABEL\": \"Breadcrumb\"\n  },\n  \"CALENDAR\": {\n    \"MONTHS\": {\n      \"JANUARY\": \"January\",\n      \"FEBRUARY\": \"February\",\n      \"MARCH\": \"March\",\n      \"APRIL\": \"April\",\n      \"MAY\": \"May\",\n      \"JUNE\": \"June\",\n      \"JULY\": \"July\",\n      \"AUGUST\": \"August\",\n      \"SEPTEMBER\": \"September\",\n      \"OCTOBER\": \"October\",\n      \"NOVEMBER\": \"November\",\n      \"DECEMBER\": \"December\"\n    },\n    \"SHORTWEEKDAYS\": {\n      \"SUNDAY\": \"Sun\",\n      \"MONDAY\": \"Mon\",\n      \"TUESDAY\": \"Tue\",\n      \"WEDNESDAY\": \"Wed\",\n      \"THURSDAY\": \"Thu\",\n      \"FRIDAY\": \"Fri\",\n      \"SATURDAY\": \"Sat\"\n    },\n    \"QUARTERS\": [{\n      \"name\": \"Q1\",\n      \"months\": \"January-March\"\n    }, {\n      \"name\": \"Q2\",\n      \"months\": \"April-June\"\n    }, {\n      \"name\": \"Q3\",\n      \"months\": \"July-September\"\n    }, {\n      \"name\": \"Q4\",\n      \"months\": \"October-December\"\n    }]\n  },\n  \"CODE_SNIPPET\": {\n    \"CODE_SNIPPET_TEXT\": \"Code Snippet Text\",\n    \"SHOW_MORE\": \"Show more\",\n    \"SHOW_LESS\": \"Show less\",\n    \"SHOW_MORE_ICON\": \"Show more icon\",\n    \"COPY_CODE\": \"Copy code\",\n    \"COPIED\": \"Copied!\"\n  },\n  \"COMBOBOX\": {\n    \"PLACEHOLDER\": \"Filter...\",\n    \"CLEAR_SELECTIONS\": \"Clear all selected items\",\n    \"CLEAR_SELECTED\": \"Clear selected item\",\n    \"A11Y\": {\n      \"OPEN_MENU\": \"open menu\",\n      \"CLOSE_MENU\": \"close menu\",\n      \"CLEAR_SELECTIONS\": \"Clear all selected items\",\n      \"CLEAR_SELECTED\": \"Clear Selection\"\n    }\n  },\n  \"DIALOG\": {\n    \"POPOVER\": {\n      \"CLOSE\": \"Close popover\"\n    }\n  },\n  \"DROPDOWN\": {\n    \"OPEN\": \"Open menu\",\n    \"SELECTED\": \"selected\",\n    \"CLEAR\": \"Clear all selected items\",\n    \"FILTER\": {\n      \"SELECTED_ONLY\": \"Show selected only\",\n      \"SEARCH\": \"Search\",\n      \"NO_RESULTS\": \"No search results\",\n      \"RESET_SEARCH\": \"Reset search\"\n    }\n  },\n  \"DROPDOWN_LIST\": {\n    \"LABEL\": \"Listbox\"\n  },\n  \"FILE_UPLOADER\": {\n    \"CHECKMARK\": \"Checkmark\",\n    \"CHECKMARK_TITLE\": \"File uploaded!\",\n    \"OPEN\": \"Add file\",\n    \"REMOVE_BUTTON\": \"Close button\",\n    \"REMOVE_TITLE\": \"Delete File\"\n  },\n  \"LOADING\": {\n    \"TITLE\": \"Loading\"\n  },\n  \"MODAL\": {\n    \"CLOSE\": \"Close modal\"\n  },\n  \"NOTIFICATION\": {\n    \"CLOSE_BUTTON\": \"Close alert notification\"\n  },\n  \"NUMBER\": {\n    \"INCREMENT\": \"increment value\",\n    \"DECREMENT\": \"decrement value\"\n  },\n  \"OVERFLOW_MENU\": {\n    \"OVERFLOW\": \"Overflow\"\n  },\n  \"SEARCH\": {\n    \"LABEL\": \"Search\",\n    \"PLACEHOLDER\": \"Search\",\n    \"CLEAR_BUTTON\": \"Clear search input\",\n    \"TOOLBAR_SEARCH\": \"Toolbar search\"\n  },\n  \"PAGINATION\": {\n    \"ITEMS_PER_PAGE\": \"Items per page:\",\n    \"OPEN_LIST_OF_OPTIONS\": \"Open list of options\",\n    \"BACKWARD\": \"Backward\",\n    \"FORWARD\": \"Forward\",\n    \"TOTAL_ITEMS_UNKNOWN\": \"{{start}}-{{end}} items\",\n    \"TOTAL_ITEMS\": \"{{start}}-{{end}} of {{total}} items\",\n    \"TOTAL_ITEM\": \"{{start}}-{{end}} of {{total}} item\",\n    \"PAGE\": \"page\",\n    \"OF_LAST_PAGES\": \"of {{last}} pages\",\n    \"OF_LAST_PAGE\": \"of {{last}} page\",\n    \"NEXT\": \"Next\",\n    \"PREVIOUS\": \"Previous\",\n    \"SELECT_ARIA\": \"Select page number\"\n  },\n  \"TABLE\": {\n    \"GO_TO_PAGE\": \"Go to page\",\n    \"PREVIOUS_PAGE\": \"Previous page\",\n    \"NEXT_PAGE\": \"Next page\",\n    \"PREVIOUS_3\": \"Scroll to previous 3 pages\",\n    \"NEXT_3\": \"Scroll to next 3 pages\",\n    \"FILTER\": \"Filter\",\n    \"END_OF_DATA\": \"You've reached the end of your content\",\n    \"SCROLL_TOP\": \"Scroll to top\",\n    \"CHECKBOX_HEADER\": \"Select all rows\",\n    \"CHECKBOX_ROW\": \"Select {{value}}\",\n    \"EXPAND_BUTTON\": \"Expand row\",\n    \"SORT_DESCENDING\": \"Sort rows by this header in descending order\",\n    \"SORT_ASCENDING\": \"Sort rows by this header in ascending order\",\n    \"ROW\": \"row\"\n  },\n  \"TABLE_TOOLBAR\": {\n    \"ACTION_BAR\": \"Table action bar\",\n    \"BATCH_TEXT\": \"\",\n    \"BATCH_TEXT_SINGLE\": \"1 item selected\",\n    \"BATCH_TEXT_MULTIPLE\": \"{{count}} items selected\",\n    \"CANCEL\": \"Cancel\"\n  },\n  \"TABS\": {\n    \"BUTTON_ARIA_LEFT\": \"Go to the previous tab\",\n    \"BUTTON_ARIA_RIGHT\": \"Go to the next tab\"\n  },\n  \"TILES\": {\n    \"TILE\": \"tile\",\n    \"EXPAND\": \"Expand\",\n    \"COLLAPSE\": \"Collapse\"\n  },\n  \"TOGGLE\": {\n    \"OFF\": \"Off\",\n    \"ON\": \"On\"\n  },\n  \"UI_SHELL\": {\n    \"SKIP_TO\": \"Skip to content\",\n    \"HEADER\": {\n      \"OPEN_MENU\": \"Open menu\",\n      \"CLOSE_MENU\": \"Close menu\"\n    },\n    \"SIDE_NAV\": {\n      \"LABEL\": \"Side navigation\",\n      \"SWITCHER\": \"Switcher\",\n      \"TOGGLE_OPEN\": \"Open\",\n      \"TOGGLE_CLOSE\": \"Close\"\n    }\n  }\n};\n/**\n * Takes the `Observable` returned from `i18n.get` and an object of variables to replace.\n *\n * The keys specify the variable name in the string.\n *\n * Example:\n * ```typescript\n * service.set({ \"TEST\": \"{{foo}} {{bar}}\" });\n *\n * service.replace(service.get(\"TEST\"), { foo: \"test\", bar: \"asdf\" })\n * ```\n *\n * Produces: `\"test asdf\"`\n *\n * @param subject the translation to replace variables on\n * @param variables object of variables to replace\n */\n\nconst replace = (subject, variables) => subject.pipe(map(str => {\n  const keys = Object.keys(variables);\n\n  for (const key of keys) {\n    const value = variables[key];\n    str = str.replace(new RegExp(`{{\\\\s*${key}\\\\s*}}`, \"g\"), value);\n  }\n\n  return str;\n}));\n/**\n * Represents an \"overridable\" translation value.\n *\n * Largely an internal usecase. There are situations where we want an `Observable` that\n * can emit events from a centralized source **OR** an `Observable` that will emit events\n * from a component local source. The key example being on/off text in a `Toggle` - In some cases\n * we want the `Toggle` to use `I18n`s global translations, but in others we'd prefer to use a local\n * override. We don't ever need to return to a non-overridden state, but we do need the ability to\n * switch _to_ an overridden sate.\n */\n\n\nclass Overridable {\n  constructor(path, i18n) {\n    this.path = path;\n    this.i18n = i18n;\n    /**\n     * Our base non-overridden translation.\n     */\n\n    this.baseTranslation = this.i18n.get(this.path);\n    /**\n     * A boolean to flip between overridden and non-overridden states.\n     */\n\n    this.isOverridden = false;\n    /**\n     * ensure `$override` is initialized with the correct default value\n     * in some cases `_value` can get changed for an `Observable` before `$override` is created\n     */\n\n    const value = this.i18n.getValueFromPath(this.path);\n    this.$override = new BehaviorSubject(value);\n    this._value = value;\n  }\n  /**\n   * The raw value of the translation. Defaults to the string value, but will return the value passed to `override`\n   *\n   * @readonly\n   */\n\n\n  get value() {\n    return this._value;\n  }\n\n  set value(v) {\n    this.override(v);\n  }\n  /**\n   * The translation subject. Returns either a stream of overridden values, or our base translation values.\n   *\n   * @readonly\n   */\n\n\n  get subject() {\n    /**\n     * since inputs are bound on template instantiation (and thusly will always have _some_ value)\n     * We can use a simple boolean and the `iif` function to determine which subject to return on subscription\n     */\n    return iif(() => this.isOverridden, this.$override, this.baseTranslation);\n  }\n  /**\n   * Takes a string or an `Observable` that emits strings.\n   * Overrides the value provided by the `I18n` service.\n   */\n\n\n  override(value) {\n    this.isOverridden = true; // To ensure that there are not multiple subscriptions created for the same observable, we\n    // unsubscribe if a subscription already exists for an observable before creating a new one.\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n\n    this._value = value;\n\n    if (isObservable(value)) {\n      this.subscription = value.subscribe(v => {\n        this.$override.next(v);\n      });\n    } else {\n      this.$override.next(value);\n    }\n  }\n\n}\n/**\n * The I18n service is a minimal internal singleton service used to supply our components with translated strings.\n *\n * All the components that support I18n also support directly passed strings.\n * Usage of I18n is optional, and it is not recommended for application use (libraries like ngx-translate\n * are a better choice)\n *\n */\n\n\nclass I18n {\n  constructor() {\n    this.translationStrings = EN;\n    this.translations = new Map();\n    this.locale = new BehaviorSubject(\"en\");\n  }\n  /**\n   * Sets the locale and optionally the translation strings. Locale is used by components that\n   * are already locale aware (datepicker for example) while the translation strings are used\n   * for components that are not.\n   *\n   * Locales set here will override locales/languages set in components\n   * @param language an ISO 639-1 language code - https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n   * @param strings an object of strings, optional\n   */\n\n\n  setLocale(language, strings) {\n    this.locale.next(language);\n\n    if (strings) {\n      this.set(strings);\n    }\n  }\n  /**\n   * Returns the current locale\n   */\n\n\n  getLocale() {\n    return this.locale.value;\n  }\n  /**\n   * Returns an observable that resolves to the current locale, and will update when changed\n   */\n\n\n  getLocaleObservable() {\n    return this.locale.asObservable();\n  }\n  /**\n   * Set/update the translations from an object. Also notifies all participating components of the update.\n   *\n   * @param strings an object of strings, should follow the same format as src/i18n/en.json\n   */\n\n\n  set(strings) {\n    this.translationStrings = merge({}, EN, strings); // iterate over all our tracked translations and update each observable\n\n    const translations = Array.from(this.translations);\n\n    for (const [path, subject] of translations) {\n      subject.next(this.getValueFromPath(path));\n    }\n  }\n  /**\n   * When a path is specified returns an observable that will resolve to the translation string value.\n   *\n   * Returns the full translations object if path is not specified.\n   *\n   * @param path optional, looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n   */\n\n\n  get(path) {\n    if (!path) {\n      return this.translationStrings;\n    }\n\n    return this.getSubject(path);\n  }\n  /**\n   * Returns all descendents of some path fragment as an object.\n   *\n   * @param partialPath a path fragment, for example `\"NOTIFICATION\"`\n   */\n\n\n  getMultiple(partialPath) {\n    const values = this.getValueFromPath(partialPath);\n    const subjects = {};\n\n    for (const key of Object.keys(values)) {\n      if (values[key] === Object(values[key])) {\n        subjects[key] = this.getMultiple(`${partialPath}.${key}`);\n      } else {\n        subjects[key] = this.getSubject(`${partialPath}.${key}`);\n      }\n    }\n\n    return subjects;\n  }\n  /**\n   * Returns an instance of `Overridable` that can be used to optionally override the value provided by `I18n`\n   * @param path looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n   */\n\n\n  getOverridable(path) {\n    return new Overridable(path, this);\n  }\n  /**\n   * Takes the `Observable` returned from `i18n.get` and an object of variables to replace.\n   *\n   * The keys specify the variable name in the string.\n   *\n   * Example:\n   * ```\n   * service.set({ \"TEST\": \"{{foo}} {{bar}}\" });\n   *\n   * service.replace(service.get(\"TEST\"), { foo: \"test\", bar: \"asdf\" })\n   * ```\n   *\n   * Produces: `\"test asdf\"`\n   *\n   * @param subject the translation to replace variables on\n   * @param variables object of variables to replace\n   */\n\n\n  replace(subject, variables) {\n    return replace(subject, variables);\n  }\n  /**\n   * Trys to resolve a value from the provided path.\n   *\n   * @param path looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n   */\n\n\n  getValueFromPath(path) {\n    let value = this.translationStrings;\n\n    for (const segment of path.split(\".\")) {\n      if (value[segment] !== undefined && value[segment] !== null) {\n        value = value[segment];\n      } else {\n        throw new Error(`no key ${segment} at ${path}`);\n      }\n    }\n\n    return value;\n  }\n  /**\n   * Helper method that returns an observable from the internal cache based on the path\n   *\n   * @param path looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n   */\n\n\n  getSubject(path) {\n    try {\n      // we run this here to validate the path exists before adding it to the translation map\n      const value = this.getValueFromPath(path);\n\n      if (this.translations.has(path)) {\n        return this.translations.get(path);\n      }\n\n      const translation = new BehaviorSubject(value);\n      this.translations.set(path, translation);\n      return translation;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n}\n\nI18n.Éµfac = function I18n_Factory(t) {\n  return new (t || I18n)();\n};\n\nI18n.Éµprov = /*@__PURE__*/Éµngcc0.ÉµÉµdefineInjectable({\n  token: I18n,\n  factory: I18n.Éµfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(I18n, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass ReplacePipe {\n  transform(value, variables) {\n    return replace(value, variables);\n  }\n\n}\n\nReplacePipe.Éµfac = function ReplacePipe_Factory(t) {\n  return new (t || ReplacePipe)();\n};\n\nReplacePipe.Éµpipe = /*@__PURE__*/Éµngcc0.ÉµÉµdefinePipe({\n  name: \"i18nReplace\",\n  type: ReplacePipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(ReplacePipe, [{\n    type: Pipe,\n    args: [{\n      name: \"i18nReplace\"\n    }]\n  }], null, null);\n})(); // either provides a new instance of I18n, or returns the parent\n\n\nfunction I18N_SERVICE_PROVIDER_FACTORY(parentService) {\n  return parentService || new I18n();\n} // I18n should provide a single instance of itself to ensure that translations are consistent through the app\n\n\nconst I18N_SERVICE_PROVIDER = {\n  provide: I18n,\n  deps: [[new Optional(), new SkipSelf(), I18n]],\n  useFactory: I18N_SERVICE_PROVIDER_FACTORY\n};\n\nclass I18nModule {}\n\nI18nModule.Éµfac = function I18nModule_Factory(t) {\n  return new (t || I18nModule)();\n};\n\nI18nModule.Éµmod = /*@__PURE__*/Éµngcc0.ÉµÉµdefineNgModule({\n  type: I18nModule\n});\nI18nModule.Éµinj = /*@__PURE__*/Éµngcc0.ÉµÉµdefineInjector({\n  providers: [I18n, I18N_SERVICE_PROVIDER]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(I18nModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ReplacePipe],\n      exports: [ReplacePipe],\n      providers: [I18n, I18N_SERVICE_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(I18nModule, {\n    declarations: [ReplacePipe],\n    exports: [ReplacePipe]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { I18n, replace, Overridable, ReplacePipe, I18N_SERVICE_PROVIDER_FACTORY, I18N_SERVICE_PROVIDER, I18nModule };","map":{"version":3,"names":["BehaviorSubject","isObservable","iif","map","merge","Injectable","Pipe","NgModule","SkipSelf","Optional","Éµngcc0","EN","replace","subject","variables","pipe","str","keys","Object","key","value","RegExp","Overridable","constructor","path","i18n","baseTranslation","get","isOverridden","getValueFromPath","$override","_value","v","override","subscription","unsubscribe","subscribe","next","I18n","translationStrings","translations","Map","locale","setLocale","language","strings","set","getLocale","getLocaleObservable","asObservable","Array","from","getSubject","getMultiple","partialPath","values","subjects","getOverridable","segment","split","undefined","Error","has","translation","error","console","Éµfac","I18n_Factory","t","Éµprov","ÉµÉµdefineInjectable","token","factory","ngDevMode","ÉµsetClassMetadata","type","ReplacePipe","transform","ReplacePipe_Factory","Éµpipe","ÉµÉµdefinePipe","name","pure","args","I18N_SERVICE_PROVIDER_FACTORY","parentService","I18N_SERVICE_PROVIDER","provide","deps","useFactory","I18nModule","I18nModule_Factory","Éµmod","ÉµÉµdefineNgModule","Éµinj","ÉµÉµdefineInjector","providers","declarations","exports","ngJitMode","ÉµÉµsetNgModuleScope"],"sources":["/Users/TSC/Desktop/Angular-Carbon/carbon-tutorial-angular/node_modules/carbon-components-angular/__ivy_ngcc__/fesm2015/carbon-components-angular-i18n.js"],"sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-i18n.js\n *\n * Copyright 2014, 2022 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { BehaviorSubject, isObservable, iif } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { merge } from 'carbon-components-angular/utils';\nimport { Injectable, Pipe, NgModule, SkipSelf, Optional } from '@angular/core';\n\nimport * as Éµngcc0 from '@angular/core';\nvar EN = {\n    \"BANNER\": {\n        \"CLOSE_BUTTON\": \"Close alert banner\"\n    },\n    \"BREADCRUMB\": {\n        \"LABEL\": \"Breadcrumb\"\n    },\n    \"CALENDAR\": {\n        \"MONTHS\": {\n            \"JANUARY\": \"January\",\n            \"FEBRUARY\": \"February\",\n            \"MARCH\": \"March\",\n            \"APRIL\": \"April\",\n            \"MAY\": \"May\",\n            \"JUNE\": \"June\",\n            \"JULY\": \"July\",\n            \"AUGUST\": \"August\",\n            \"SEPTEMBER\": \"September\",\n            \"OCTOBER\": \"October\",\n            \"NOVEMBER\": \"November\",\n            \"DECEMBER\": \"December\"\n        },\n        \"SHORTWEEKDAYS\": {\n            \"SUNDAY\": \"Sun\",\n            \"MONDAY\": \"Mon\",\n            \"TUESDAY\": \"Tue\",\n            \"WEDNESDAY\": \"Wed\",\n            \"THURSDAY\": \"Thu\",\n            \"FRIDAY\": \"Fri\",\n            \"SATURDAY\": \"Sat\"\n        },\n        \"QUARTERS\": [\n            {\n                \"name\": \"Q1\",\n                \"months\": \"January-March\"\n            },\n            {\n                \"name\": \"Q2\",\n                \"months\": \"April-June\"\n            },\n            {\n                \"name\": \"Q3\",\n                \"months\": \"July-September\"\n            },\n            {\n                \"name\": \"Q4\",\n                \"months\": \"October-December\"\n            }\n        ]\n    },\n    \"CODE_SNIPPET\": {\n        \"CODE_SNIPPET_TEXT\": \"Code Snippet Text\",\n        \"SHOW_MORE\": \"Show more\",\n        \"SHOW_LESS\": \"Show less\",\n        \"SHOW_MORE_ICON\": \"Show more icon\",\n        \"COPY_CODE\": \"Copy code\",\n        \"COPIED\": \"Copied!\"\n    },\n    \"COMBOBOX\": {\n        \"PLACEHOLDER\": \"Filter...\",\n        \"CLEAR_SELECTIONS\": \"Clear all selected items\",\n        \"CLEAR_SELECTED\": \"Clear selected item\",\n        \"A11Y\": {\n            \"OPEN_MENU\": \"open menu\",\n            \"CLOSE_MENU\": \"close menu\",\n            \"CLEAR_SELECTIONS\": \"Clear all selected items\",\n            \"CLEAR_SELECTED\": \"Clear Selection\"\n        }\n    },\n    \"DIALOG\": {\n        \"POPOVER\": {\n            \"CLOSE\": \"Close popover\"\n        }\n    },\n    \"DROPDOWN\": {\n        \"OPEN\": \"Open menu\",\n        \"SELECTED\": \"selected\",\n        \"CLEAR\": \"Clear all selected items\",\n        \"FILTER\": {\n            \"SELECTED_ONLY\": \"Show selected only\",\n            \"SEARCH\": \"Search\",\n            \"NO_RESULTS\": \"No search results\",\n            \"RESET_SEARCH\": \"Reset search\"\n        }\n    },\n    \"DROPDOWN_LIST\": {\n        \"LABEL\": \"Listbox\"\n    },\n    \"FILE_UPLOADER\": {\n        \"CHECKMARK\": \"Checkmark\",\n        \"CHECKMARK_TITLE\": \"File uploaded!\",\n        \"OPEN\": \"Add file\",\n        \"REMOVE_BUTTON\": \"Close button\",\n        \"REMOVE_TITLE\": \"Delete File\"\n    },\n    \"LOADING\": {\n        \"TITLE\": \"Loading\"\n    },\n    \"MODAL\": {\n        \"CLOSE\": \"Close modal\"\n    },\n    \"NOTIFICATION\": {\n        \"CLOSE_BUTTON\": \"Close alert notification\"\n    },\n    \"NUMBER\": {\n        \"INCREMENT\": \"increment value\",\n        \"DECREMENT\": \"decrement value\"\n    },\n    \"OVERFLOW_MENU\": {\n        \"OVERFLOW\": \"Overflow\"\n    },\n    \"SEARCH\": {\n        \"LABEL\": \"Search\",\n        \"PLACEHOLDER\": \"Search\",\n        \"CLEAR_BUTTON\": \"Clear search input\",\n        \"TOOLBAR_SEARCH\": \"Toolbar search\"\n    },\n    \"PAGINATION\": {\n        \"ITEMS_PER_PAGE\": \"Items per page:\",\n        \"OPEN_LIST_OF_OPTIONS\": \"Open list of options\",\n        \"BACKWARD\": \"Backward\",\n        \"FORWARD\": \"Forward\",\n        \"TOTAL_ITEMS_UNKNOWN\": \"{{start}}-{{end}} items\",\n        \"TOTAL_ITEMS\": \"{{start}}-{{end}} of {{total}} items\",\n        \"TOTAL_ITEM\": \"{{start}}-{{end}} of {{total}} item\",\n        \"PAGE\": \"page\",\n        \"OF_LAST_PAGES\": \"of {{last}} pages\",\n        \"OF_LAST_PAGE\": \"of {{last}} page\",\n        \"NEXT\": \"Next\",\n        \"PREVIOUS\": \"Previous\",\n        \"SELECT_ARIA\": \"Select page number\"\n    },\n    \"TABLE\": {\n        \"GO_TO_PAGE\": \"Go to page\",\n        \"PREVIOUS_PAGE\": \"Previous page\",\n        \"NEXT_PAGE\": \"Next page\",\n        \"PREVIOUS_3\": \"Scroll to previous 3 pages\",\n        \"NEXT_3\": \"Scroll to next 3 pages\",\n        \"FILTER\": \"Filter\",\n        \"END_OF_DATA\": \"You've reached the end of your content\",\n        \"SCROLL_TOP\": \"Scroll to top\",\n        \"CHECKBOX_HEADER\": \"Select all rows\",\n        \"CHECKBOX_ROW\": \"Select {{value}}\",\n        \"EXPAND_BUTTON\": \"Expand row\",\n        \"SORT_DESCENDING\": \"Sort rows by this header in descending order\",\n        \"SORT_ASCENDING\": \"Sort rows by this header in ascending order\",\n        \"ROW\": \"row\"\n    },\n    \"TABLE_TOOLBAR\": {\n        \"ACTION_BAR\": \"Table action bar\",\n        \"BATCH_TEXT\": \"\",\n        \"BATCH_TEXT_SINGLE\": \"1 item selected\",\n        \"BATCH_TEXT_MULTIPLE\": \"{{count}} items selected\",\n        \"CANCEL\": \"Cancel\"\n    },\n    \"TABS\": {\n        \"BUTTON_ARIA_LEFT\": \"Go to the previous tab\",\n        \"BUTTON_ARIA_RIGHT\": \"Go to the next tab\"\n    },\n    \"TILES\": {\n        \"TILE\": \"tile\",\n        \"EXPAND\": \"Expand\",\n        \"COLLAPSE\": \"Collapse\"\n    },\n    \"TOGGLE\": {\n        \"OFF\": \"Off\",\n        \"ON\": \"On\"\n    },\n    \"UI_SHELL\": {\n        \"SKIP_TO\": \"Skip to content\",\n        \"HEADER\": {\n            \"OPEN_MENU\": \"Open menu\",\n            \"CLOSE_MENU\": \"Close menu\"\n        },\n        \"SIDE_NAV\": {\n            \"LABEL\": \"Side navigation\",\n            \"SWITCHER\": \"Switcher\",\n            \"TOGGLE_OPEN\": \"Open\",\n            \"TOGGLE_CLOSE\": \"Close\"\n        }\n    }\n};\n\n/**\n * Takes the `Observable` returned from `i18n.get` and an object of variables to replace.\n *\n * The keys specify the variable name in the string.\n *\n * Example:\n * ```typescript\n * service.set({ \"TEST\": \"{{foo}} {{bar}}\" });\n *\n * service.replace(service.get(\"TEST\"), { foo: \"test\", bar: \"asdf\" })\n * ```\n *\n * Produces: `\"test asdf\"`\n *\n * @param subject the translation to replace variables on\n * @param variables object of variables to replace\n */\nconst replace = (subject, variables) => subject.pipe(map(str => {\n    const keys = Object.keys(variables);\n    for (const key of keys) {\n        const value = variables[key];\n        str = str.replace(new RegExp(`{{\\\\s*${key}\\\\s*}}`, \"g\"), value);\n    }\n    return str;\n}));\n/**\n * Represents an \"overridable\" translation value.\n *\n * Largely an internal usecase. There are situations where we want an `Observable` that\n * can emit events from a centralized source **OR** an `Observable` that will emit events\n * from a component local source. The key example being on/off text in a `Toggle` - In some cases\n * we want the `Toggle` to use `I18n`s global translations, but in others we'd prefer to use a local\n * override. We don't ever need to return to a non-overridden state, but we do need the ability to\n * switch _to_ an overridden sate.\n */\nclass Overridable {\n    constructor(path, i18n) {\n        this.path = path;\n        this.i18n = i18n;\n        /**\n         * Our base non-overridden translation.\n         */\n        this.baseTranslation = this.i18n.get(this.path);\n        /**\n         * A boolean to flip between overridden and non-overridden states.\n         */\n        this.isOverridden = false;\n        /**\n         * ensure `$override` is initialized with the correct default value\n         * in some cases `_value` can get changed for an `Observable` before `$override` is created\n         */\n        const value = this.i18n.getValueFromPath(this.path);\n        this.$override = new BehaviorSubject(value);\n        this._value = value;\n    }\n    /**\n     * The raw value of the translation. Defaults to the string value, but will return the value passed to `override`\n     *\n     * @readonly\n     */\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        this.override(v);\n    }\n    /**\n     * The translation subject. Returns either a stream of overridden values, or our base translation values.\n     *\n     * @readonly\n     */\n    get subject() {\n        /**\n         * since inputs are bound on template instantiation (and thusly will always have _some_ value)\n         * We can use a simple boolean and the `iif` function to determine which subject to return on subscription\n         */\n        return iif(() => this.isOverridden, this.$override, this.baseTranslation);\n    }\n    /**\n     * Takes a string or an `Observable` that emits strings.\n     * Overrides the value provided by the `I18n` service.\n     */\n    override(value) {\n        this.isOverridden = true;\n        // To ensure that there are not multiple subscriptions created for the same observable, we\n        // unsubscribe if a subscription already exists for an observable before creating a new one.\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n        this._value = value;\n        if (isObservable(value)) {\n            this.subscription = value.subscribe(v => {\n                this.$override.next(v);\n            });\n        }\n        else {\n            this.$override.next(value);\n        }\n    }\n}\n/**\n * The I18n service is a minimal internal singleton service used to supply our components with translated strings.\n *\n * All the components that support I18n also support directly passed strings.\n * Usage of I18n is optional, and it is not recommended for application use (libraries like ngx-translate\n * are a better choice)\n *\n */\nclass I18n {\n    constructor() {\n        this.translationStrings = EN;\n        this.translations = new Map();\n        this.locale = new BehaviorSubject(\"en\");\n    }\n    /**\n     * Sets the locale and optionally the translation strings. Locale is used by components that\n     * are already locale aware (datepicker for example) while the translation strings are used\n     * for components that are not.\n     *\n     * Locales set here will override locales/languages set in components\n     * @param language an ISO 639-1 language code - https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n     * @param strings an object of strings, optional\n     */\n    setLocale(language, strings) {\n        this.locale.next(language);\n        if (strings) {\n            this.set(strings);\n        }\n    }\n    /**\n     * Returns the current locale\n     */\n    getLocale() {\n        return this.locale.value;\n    }\n    /**\n     * Returns an observable that resolves to the current locale, and will update when changed\n     */\n    getLocaleObservable() {\n        return this.locale.asObservable();\n    }\n    /**\n     * Set/update the translations from an object. Also notifies all participating components of the update.\n     *\n     * @param strings an object of strings, should follow the same format as src/i18n/en.json\n     */\n    set(strings) {\n        this.translationStrings = merge({}, EN, strings);\n        // iterate over all our tracked translations and update each observable\n        const translations = Array.from(this.translations);\n        for (const [path, subject] of translations) {\n            subject.next(this.getValueFromPath(path));\n        }\n    }\n    /**\n     * When a path is specified returns an observable that will resolve to the translation string value.\n     *\n     * Returns the full translations object if path is not specified.\n     *\n     * @param path optional, looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n     */\n    get(path) {\n        if (!path) {\n            return this.translationStrings;\n        }\n        return this.getSubject(path);\n    }\n    /**\n     * Returns all descendents of some path fragment as an object.\n     *\n     * @param partialPath a path fragment, for example `\"NOTIFICATION\"`\n     */\n    getMultiple(partialPath) {\n        const values = this.getValueFromPath(partialPath);\n        const subjects = {};\n        for (const key of Object.keys(values)) {\n            if (values[key] === Object(values[key])) {\n                subjects[key] = this.getMultiple(`${partialPath}.${key}`);\n            }\n            else {\n                subjects[key] = this.getSubject(`${partialPath}.${key}`);\n            }\n        }\n        return subjects;\n    }\n    /**\n     * Returns an instance of `Overridable` that can be used to optionally override the value provided by `I18n`\n     * @param path looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n     */\n    getOverridable(path) {\n        return new Overridable(path, this);\n    }\n    /**\n     * Takes the `Observable` returned from `i18n.get` and an object of variables to replace.\n     *\n     * The keys specify the variable name in the string.\n     *\n     * Example:\n     * ```\n     * service.set({ \"TEST\": \"{{foo}} {{bar}}\" });\n     *\n     * service.replace(service.get(\"TEST\"), { foo: \"test\", bar: \"asdf\" })\n     * ```\n     *\n     * Produces: `\"test asdf\"`\n     *\n     * @param subject the translation to replace variables on\n     * @param variables object of variables to replace\n     */\n    replace(subject, variables) {\n        return replace(subject, variables);\n    }\n    /**\n     * Trys to resolve a value from the provided path.\n     *\n     * @param path looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n     */\n    getValueFromPath(path) {\n        let value = this.translationStrings;\n        for (const segment of path.split(\".\")) {\n            if (value[segment] !== undefined && value[segment] !== null) {\n                value = value[segment];\n            }\n            else {\n                throw new Error(`no key ${segment} at ${path}`);\n            }\n        }\n        return value;\n    }\n    /**\n     * Helper method that returns an observable from the internal cache based on the path\n     *\n     * @param path looks like `\"NOTIFICATION.CLOSE_BUTTON\"`\n     */\n    getSubject(path) {\n        try {\n            // we run this here to validate the path exists before adding it to the translation map\n            const value = this.getValueFromPath(path);\n            if (this.translations.has(path)) {\n                return this.translations.get(path);\n            }\n            const translation = new BehaviorSubject(value);\n            this.translations.set(path, translation);\n            return translation;\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n}\nI18n.Éµfac = function I18n_Factory(t) { return new (t || I18n)(); };\nI18n.Éµprov = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjectable({ token: I18n, factory: I18n.Éµfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(I18n, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\nclass ReplacePipe {\n    transform(value, variables) {\n        return replace(value, variables);\n    }\n}\nReplacePipe.Éµfac = function ReplacePipe_Factory(t) { return new (t || ReplacePipe)(); };\nReplacePipe.Éµpipe = /*@__PURE__*/ Éµngcc0.ÉµÉµdefinePipe({ name: \"i18nReplace\", type: ReplacePipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(ReplacePipe, [{\n        type: Pipe,\n        args: [{\n                name: \"i18nReplace\"\n            }]\n    }], null, null); })();\n\n// either provides a new instance of I18n, or returns the parent\nfunction I18N_SERVICE_PROVIDER_FACTORY(parentService) {\n    return parentService || new I18n();\n}\n// I18n should provide a single instance of itself to ensure that translations are consistent through the app\nconst I18N_SERVICE_PROVIDER = {\n    provide: I18n,\n    deps: [[new Optional(), new SkipSelf(), I18n]],\n    useFactory: I18N_SERVICE_PROVIDER_FACTORY\n};\nclass I18nModule {\n}\nI18nModule.Éµfac = function I18nModule_Factory(t) { return new (t || I18nModule)(); };\nI18nModule.Éµmod = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineNgModule({ type: I18nModule });\nI18nModule.Éµinj = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjector({ providers: [\n        I18n,\n        I18N_SERVICE_PROVIDER\n    ] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(I18nModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ReplacePipe],\n                exports: [ReplacePipe],\n                providers: [\n                    I18n,\n                    I18N_SERVICE_PROVIDER\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(I18nModule, { declarations: [ReplacePipe], exports: [ReplacePipe] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { I18n, replace, Overridable, ReplacePipe, I18N_SERVICE_PROVIDER_FACTORY, I18N_SERVICE_PROVIDER, I18nModule };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}