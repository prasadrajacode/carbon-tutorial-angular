{"ast":null,"code":"/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-toggle.js\n *\n * Copyright 2014, 2022 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Checkbox } from 'carbon-components-angular/checkbox';\nimport { ChangeDetectorRef, Component, Input, Output, EventEmitter, TemplateRef, HostBinding, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { I18n, I18nModule } from 'carbon-components-angular/i18n';\n/**\n * Defines the set of states for a toggle component.\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'carbon-components-angular/i18n';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction Toggle_label_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.label);\n  }\n}\n\nfunction Toggle_label_0_2_ng_template_0_Template(rf, ctx) {}\n\nfunction Toggle_label_0_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, Toggle_label_0_2_ng_template_0_Template, 0, 0, \"ng-template\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.label);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"bx--label--disabled\": a0\n  };\n};\n\nfunction Toggle_label_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 6);\n    ɵngcc0.ɵɵtemplate(1, Toggle_label_0_ng_container_1_Template, 2, 1, \"ng-container\", 7);\n    ɵngcc0.ɵɵtemplate(2, Toggle_label_0_2_Template, 1, 1, null, 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.ariaLabelledby)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(4, _c0, ctx_r0.disabled));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.isTemplate(ctx_r0.label));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isTemplate(ctx_r0.label));\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"bx--toggle-input--small\": a0,\n    \"bx--skeleton\": a1\n  };\n};\n\nconst _c2 = function (a0) {\n  return {\n    \"bx--skeleton\": a0\n  };\n};\n\nvar ToggleState;\n\n(function (ToggleState) {\n  ToggleState[ToggleState[\"Init\"] = 0] = \"Init\";\n  ToggleState[ToggleState[\"Indeterminate\"] = 1] = \"Indeterminate\";\n  ToggleState[ToggleState[\"Checked\"] = 2] = \"Checked\";\n  ToggleState[ToggleState[\"Unchecked\"] = 3] = \"Unchecked\";\n})(ToggleState || (ToggleState = {}));\n/**\n * Used to emit changes performed on toggle components.\n *\n * @deprecated since v4\n */\n\n\nclass ToggleChange {}\n/**\n * [See demo](../../?path=/story/components-toggle--basic)\n *\n * ```html\n * <ibm-toggle [(ngModel)]=\"toggleState\">Toggle</ibm-toggle>\n * ```\n *\n * <example-url>../../iframe.html?id=components-toggle--basic</example-url>\n */\n\n\nclass Toggle extends Checkbox {\n  /**\n   * Creates an instance of Toggle.\n   */\n  constructor(changeDetectorRef, i18n) {\n    super(changeDetectorRef);\n    this.changeDetectorRef = changeDetectorRef;\n    this.i18n = i18n;\n    /**\n     * Size of the toggle component.\n     */\n\n    this.size = \"md\";\n    /**\n     * Set to `true` for a loading toggle.\n     */\n\n    this.skeleton = false;\n    this.formItem = true;\n    /**\n     * The unique id allocated to the `Toggle`.\n     */\n\n    this.id = \"toggle-\" + Toggle.toggleCount;\n    /**\n     * Emits event notifying other classes when a change in state occurs on a toggle after a\n     * click.\n     *\n     * @deprecated since v4\n     */\n\n    this.change = new EventEmitter();\n    this._offValues = this.i18n.getOverridable(\"TOGGLE.OFF\");\n    this._onValues = this.i18n.getOverridable(\"TOGGLE.ON\");\n    Toggle.toggleCount++;\n  }\n  /**\n   * Text that is set on the left side of the toggle.\n   */\n\n\n  set offText(value) {\n    this._offValues.override(value);\n  }\n\n  get offText() {\n    return this._offValues.value;\n  }\n  /**\n   * Text that is set on the right side of the toggle.\n   */\n\n\n  set onText(value) {\n    this._onValues.override(value);\n  }\n\n  get onText() {\n    return this._onValues.value;\n  }\n  /**\n   * `ControlValueAccessor` method to programmatically disable the toggle input.\n   *\n   * ex: `this.formGroup.get(\"myToggle\").disable();`\n   *\n   * @param isDisabled `true` to disable the input\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  getOffText() {\n    return this._offValues.subject;\n  }\n\n  getOnText() {\n    return this._onValues.subject;\n  }\n  /**\n   * Creates instance of `ToggleChange` used to propagate the change event.\n   */\n\n\n  emitChangeEvent() {\n    /* begin deprecation */\n    let event = new ToggleChange();\n    event.source = this;\n    event.checked = this.checked;\n    this.change.emit(event);\n    /* end deprecation */\n\n    this.checkedChange.emit(this.checked);\n    this.propagateChange(this.checked);\n  }\n\n  isTemplate(value) {\n    return value instanceof TemplateRef;\n  }\n\n}\n\nToggle.ɵfac = function Toggle_Factory(t) {\n  return new (t || Toggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.I18n));\n};\n\nToggle.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: Toggle,\n  selectors: [[\"ibm-toggle\"]],\n  hostVars: 2,\n  hostBindings: function Toggle_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"bx--form-item\", ctx.formItem);\n    }\n  },\n  inputs: {\n    size: \"size\",\n    skeleton: \"skeleton\",\n    offText: \"offText\",\n    onText: \"onText\",\n    label: \"label\"\n  },\n  outputs: {\n    change: \"change\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: Toggle,\n    multi: true\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 23,\n  consts: [[\"class\", \"bx--label\", 3, \"id\", \"ngClass\", 4, \"ngIf\"], [\"type\", \"checkbox\", 1, \"bx--toggle-input\", 3, \"ngClass\", \"id\", \"value\", \"name\", \"required\", \"checked\", \"disabled\", \"change\", \"click\", \"keyup.enter\"], [1, \"bx--toggle-input__label\", 3, \"for\", \"ngClass\"], [1, \"bx--toggle__switch\"], [1, \"bx--toggle__text--off\"], [1, \"bx--toggle__text--on\"], [1, \"bx--label\", 3, \"id\", \"ngClass\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function Toggle_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, Toggle_label_0_Template, 3, 6, \"label\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"input\", 1);\n      ɵngcc0.ɵɵlistener(\"change\", function Toggle_Template_input_change_1_listener($event) {\n        return ctx.onChange($event);\n      })(\"click\", function Toggle_Template_input_click_1_listener($event) {\n        return ctx.onClick($event);\n      })(\"keyup.enter\", function Toggle_Template_input_keyup_enter_1_listener($event) {\n        return ctx.onClick($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(2, \"label\", 2)(3, \"span\", 3)(4, \"span\", 4);\n      ɵngcc0.ɵɵtext(5);\n      ɵngcc0.ɵɵpipe(6, \"async\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(7, \"span\", 5);\n      ɵngcc0.ɵɵtext(8);\n      ɵngcc0.ɵɵpipe(9, \"async\");\n      ɵngcc0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.label);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(18, _c1, ctx.size === \"sm\", ctx.skeleton))(\"id\", ctx.id)(\"value\", ctx.value)(\"name\", ctx.name)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx.checked);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"for\", ctx.id)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(21, _c2, ctx.skeleton));\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 14, !ctx.skeleton ? ctx.getOffText() : null));\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(9, 16, !ctx.skeleton ? ctx.getOnText() : null));\n    }\n  },\n  dependencies: [ɵngcc2.NgClass, ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, ɵngcc2.AsyncPipe],\n  encapsulation: 2\n});\n/**\n * Variable used for creating unique ids for toggle components.\n */\n\nToggle.toggleCount = 0;\n/** @nocollapse */\n\nToggle.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: I18n\n}];\n\nToggle.propDecorators = {\n  offText: [{\n    type: Input\n  }],\n  onText: [{\n    type: Input\n  }],\n  label: [{\n    type: Input\n  }],\n  size: [{\n    type: Input\n  }],\n  skeleton: [{\n    type: Input\n  }],\n  formItem: [{\n    type: HostBinding,\n    args: [\"class.bx--form-item\"]\n  }],\n  change: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Toggle, [{\n    type: Component,\n    args: [{\n      selector: \"ibm-toggle\",\n      template: `\n\t\t<label\n\t\t\t*ngIf=\"label\"\n\t\t\t[id]=\"ariaLabelledby\"\n\t\t\tclass=\"bx--label\"\n\t\t\t[ngClass]=\"{'bx--label--disabled': disabled}\">\n\t\t\t<ng-container *ngIf=\"!isTemplate(label)\">{{label}}</ng-container>\n\t\t\t<ng-template *ngIf=\"isTemplate(label)\" [ngTemplateOutlet]=\"label\"></ng-template>\n\t\t</label>\n\t\t<input\n\t\t\tclass=\"bx--toggle-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--toggle-input--small': size === 'sm',\n\t\t\t\t'bx--skeleton': skeleton\n\t\t\t}\"\n\t\t\t[id]=\"id\"\n\t\t\t[value]=\"value\"\n\t\t\t[name]=\"name\"\n\t\t\t[required]=\"required\"\n\t\t\t[checked]=\"checked\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[attr.aria-labelledby]=\"ariaLabelledby\"\n\t\t\t[attr.aria-checked]=\"checked\"\n\t\t\t(change)=\"onChange($event)\"\n\t\t\t(click)=\"onClick($event)\"\n\t\t\t(keyup.enter)=\"onClick($event)\">\n\t\t<label\n\t\t\tclass=\"bx--toggle-input__label\"\n\t\t\t[for]=\"id\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--skeleton': skeleton\n\t\t\t}\">\n\t\t\t<span class=\"bx--toggle__switch\">\n\t\t\t\t<span class=\"bx--toggle__text--off\">{{(!skeleton ? getOffText() : null) | async }}</span>\n\t\t\t\t<span class=\"bx--toggle__text--on\">{{(!skeleton ? getOnText() : null) | async}}</span>\n\t\t\t</span>\n\t\t</label>\n\t`,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: Toggle,\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.I18n\n    }];\n  }, {\n    size: [{\n      type: Input\n    }],\n    skeleton: [{\n      type: Input\n    }],\n    formItem: [{\n      type: HostBinding,\n      args: [\"class.bx--form-item\"]\n    }],\n    change: [{\n      type: Output\n    }],\n    offText: [{\n      type: Input\n    }],\n    onText: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }]\n  });\n})(); // modules\n\n\nclass ToggleModule {}\n\nToggleModule.ɵfac = function ToggleModule_Factory(t) {\n  return new (t || ToggleModule)();\n};\n\nToggleModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: ToggleModule\n});\nToggleModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule, FormsModule, I18nModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToggleModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [Toggle],\n      exports: [Toggle],\n      imports: [CommonModule, FormsModule, I18nModule]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToggleModule, {\n    declarations: function () {\n      return [Toggle];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, I18nModule];\n    },\n    exports: function () {\n      return [Toggle];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ToggleState, ToggleChange, Toggle, ToggleModule };","map":{"version":3,"names":["Checkbox","ChangeDetectorRef","Component","Input","Output","EventEmitter","TemplateRef","HostBinding","NgModule","NG_VALUE_ACCESSOR","FormsModule","CommonModule","I18n","I18nModule","ɵngcc0","ɵngcc1","ɵngcc2","Toggle_label_0_ng_container_1_Template","rf","ctx","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","label","Toggle_label_0_2_ng_template_0_Template","Toggle_label_0_2_Template","ɵɵtemplate","ctx_r2","ɵɵproperty","_c0","a0","Toggle_label_0_Template","ɵɵelementStart","ɵɵelementEnd","ctx_r0","ariaLabelledby","ɵɵpureFunction1","disabled","isTemplate","_c1","a1","_c2","ToggleState","ToggleChange","Toggle","constructor","changeDetectorRef","i18n","size","skeleton","formItem","id","toggleCount","change","_offValues","getOverridable","_onValues","offText","value","override","onText","setDisabledState","isDisabled","getOffText","subject","getOnText","emitChangeEvent","event","source","checked","emit","checkedChange","propagateChange","ɵfac","Toggle_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","hostVars","hostBindings","Toggle_HostBindings","ɵɵclassProp","inputs","outputs","features","ɵɵProvidersFeature","provide","useExisting","multi","ɵɵInheritDefinitionFeature","decls","vars","consts","template","Toggle_Template","ɵɵlistener","Toggle_Template_input_change_1_listener","$event","onChange","Toggle_Template_input_click_1_listener","onClick","Toggle_Template_input_keyup_enter_1_listener","ɵɵpipe","ɵɵpureFunction2","name","required","ɵɵattribute","ɵɵpipeBind1","dependencies","NgClass","NgIf","NgTemplateOutlet","AsyncPipe","encapsulation","ctorParameters","propDecorators","args","ngDevMode","ɵsetClassMetadata","selector","providers","ToggleModule","ToggleModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["/Users/TSC/Desktop/Angular-Carbon/carbon-tutorial-angular/node_modules/carbon-components-angular/__ivy_ngcc__/fesm2015/carbon-components-angular-toggle.js"],"sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-toggle.js\n *\n * Copyright 2014, 2022 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Checkbox } from 'carbon-components-angular/checkbox';\nimport { ChangeDetectorRef, Component, Input, Output, EventEmitter, TemplateRef, HostBinding, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { I18n, I18nModule } from 'carbon-components-angular/i18n';\n\n/**\n * Defines the set of states for a toggle component.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'carbon-components-angular/i18n';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction Toggle_label_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.label);\n} }\nfunction Toggle_label_0_2_ng_template_0_Template(rf, ctx) { }\nfunction Toggle_label_0_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, Toggle_label_0_2_ng_template_0_Template, 0, 0, \"ng-template\", 8);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.label);\n} }\nconst _c0 = function (a0) { return { \"bx--label--disabled\": a0 }; };\nfunction Toggle_label_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 6);\n    ɵngcc0.ɵɵtemplate(1, Toggle_label_0_ng_container_1_Template, 2, 1, \"ng-container\", 7);\n    ɵngcc0.ɵɵtemplate(2, Toggle_label_0_2_Template, 1, 1, null, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.ariaLabelledby)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(4, _c0, ctx_r0.disabled));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.isTemplate(ctx_r0.label));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isTemplate(ctx_r0.label));\n} }\nconst _c1 = function (a0, a1) { return { \"bx--toggle-input--small\": a0, \"bx--skeleton\": a1 }; };\nconst _c2 = function (a0) { return { \"bx--skeleton\": a0 }; };\nvar ToggleState;\n(function (ToggleState) {\n    ToggleState[ToggleState[\"Init\"] = 0] = \"Init\";\n    ToggleState[ToggleState[\"Indeterminate\"] = 1] = \"Indeterminate\";\n    ToggleState[ToggleState[\"Checked\"] = 2] = \"Checked\";\n    ToggleState[ToggleState[\"Unchecked\"] = 3] = \"Unchecked\";\n})(ToggleState || (ToggleState = {}));\n/**\n * Used to emit changes performed on toggle components.\n *\n * @deprecated since v4\n */\nclass ToggleChange {\n}\n/**\n * [See demo](../../?path=/story/components-toggle--basic)\n *\n * ```html\n * <ibm-toggle [(ngModel)]=\"toggleState\">Toggle</ibm-toggle>\n * ```\n *\n * <example-url>../../iframe.html?id=components-toggle--basic</example-url>\n */\nclass Toggle extends Checkbox {\n    /**\n     * Creates an instance of Toggle.\n     */\n    constructor(changeDetectorRef, i18n) {\n        super(changeDetectorRef);\n        this.changeDetectorRef = changeDetectorRef;\n        this.i18n = i18n;\n        /**\n         * Size of the toggle component.\n         */\n        this.size = \"md\";\n        /**\n         * Set to `true` for a loading toggle.\n         */\n        this.skeleton = false;\n        this.formItem = true;\n        /**\n         * The unique id allocated to the `Toggle`.\n         */\n        this.id = \"toggle-\" + Toggle.toggleCount;\n        /**\n         * Emits event notifying other classes when a change in state occurs on a toggle after a\n         * click.\n         *\n         * @deprecated since v4\n         */\n        this.change = new EventEmitter();\n        this._offValues = this.i18n.getOverridable(\"TOGGLE.OFF\");\n        this._onValues = this.i18n.getOverridable(\"TOGGLE.ON\");\n        Toggle.toggleCount++;\n    }\n    /**\n     * Text that is set on the left side of the toggle.\n     */\n    set offText(value) {\n        this._offValues.override(value);\n    }\n    get offText() {\n        return this._offValues.value;\n    }\n    /**\n     * Text that is set on the right side of the toggle.\n     */\n    set onText(value) {\n        this._onValues.override(value);\n    }\n    get onText() {\n        return this._onValues.value;\n    }\n    /**\n     * `ControlValueAccessor` method to programmatically disable the toggle input.\n     *\n     * ex: `this.formGroup.get(\"myToggle\").disable();`\n     *\n     * @param isDisabled `true` to disable the input\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    getOffText() {\n        return this._offValues.subject;\n    }\n    getOnText() {\n        return this._onValues.subject;\n    }\n    /**\n     * Creates instance of `ToggleChange` used to propagate the change event.\n     */\n    emitChangeEvent() {\n        /* begin deprecation */\n        let event = new ToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n        this.change.emit(event);\n        /* end deprecation */\n        this.checkedChange.emit(this.checked);\n        this.propagateChange(this.checked);\n    }\n    isTemplate(value) {\n        return value instanceof TemplateRef;\n    }\n}\nToggle.ɵfac = function Toggle_Factory(t) { return new (t || Toggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.I18n)); };\nToggle.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: Toggle, selectors: [[\"ibm-toggle\"]], hostVars: 2, hostBindings: function Toggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"bx--form-item\", ctx.formItem);\n    } }, inputs: { size: \"size\", skeleton: \"skeleton\", offText: \"offText\", onText: \"onText\", label: \"label\" }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: Toggle,\n                multi: true\n            }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 23, consts: [[\"class\", \"bx--label\", 3, \"id\", \"ngClass\", 4, \"ngIf\"], [\"type\", \"checkbox\", 1, \"bx--toggle-input\", 3, \"ngClass\", \"id\", \"value\", \"name\", \"required\", \"checked\", \"disabled\", \"change\", \"click\", \"keyup.enter\"], [1, \"bx--toggle-input__label\", 3, \"for\", \"ngClass\"], [1, \"bx--toggle__switch\"], [1, \"bx--toggle__text--off\"], [1, \"bx--toggle__text--on\"], [1, \"bx--label\", 3, \"id\", \"ngClass\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\"]], template: function Toggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, Toggle_label_0_Template, 3, 6, \"label\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"input\", 1);\n        ɵngcc0.ɵɵlistener(\"change\", function Toggle_Template_input_change_1_listener($event) { return ctx.onChange($event); })(\"click\", function Toggle_Template_input_click_1_listener($event) { return ctx.onClick($event); })(\"keyup.enter\", function Toggle_Template_input_keyup_enter_1_listener($event) { return ctx.onClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"label\", 2)(3, \"span\", 3)(4, \"span\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵpipe(6, \"async\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"span\", 5);\n        ɵngcc0.ɵɵtext(8);\n        ɵngcc0.ɵɵpipe(9, \"async\");\n        ɵngcc0.ɵɵelementEnd()()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.label);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(18, _c1, ctx.size === \"sm\", ctx.skeleton))(\"id\", ctx.id)(\"value\", ctx.value)(\"name\", ctx.name)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx.checked);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"for\", ctx.id)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(21, _c2, ctx.skeleton));\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 14, !ctx.skeleton ? ctx.getOffText() : null));\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(9, 16, !ctx.skeleton ? ctx.getOnText() : null));\n    } }, dependencies: [ɵngcc2.NgClass, ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, ɵngcc2.AsyncPipe], encapsulation: 2 });\n/**\n * Variable used for creating unique ids for toggle components.\n */\nToggle.toggleCount = 0;\n/** @nocollapse */\nToggle.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: I18n }\n];\nToggle.propDecorators = {\n    offText: [{ type: Input }],\n    onText: [{ type: Input }],\n    label: [{ type: Input }],\n    size: [{ type: Input }],\n    skeleton: [{ type: Input }],\n    formItem: [{ type: HostBinding, args: [\"class.bx--form-item\",] }],\n    change: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Toggle, [{\n        type: Component,\n        args: [{\n                selector: \"ibm-toggle\",\n                template: `\n\t\t<label\n\t\t\t*ngIf=\"label\"\n\t\t\t[id]=\"ariaLabelledby\"\n\t\t\tclass=\"bx--label\"\n\t\t\t[ngClass]=\"{'bx--label--disabled': disabled}\">\n\t\t\t<ng-container *ngIf=\"!isTemplate(label)\">{{label}}</ng-container>\n\t\t\t<ng-template *ngIf=\"isTemplate(label)\" [ngTemplateOutlet]=\"label\"></ng-template>\n\t\t</label>\n\t\t<input\n\t\t\tclass=\"bx--toggle-input\"\n\t\t\ttype=\"checkbox\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--toggle-input--small': size === 'sm',\n\t\t\t\t'bx--skeleton': skeleton\n\t\t\t}\"\n\t\t\t[id]=\"id\"\n\t\t\t[value]=\"value\"\n\t\t\t[name]=\"name\"\n\t\t\t[required]=\"required\"\n\t\t\t[checked]=\"checked\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[attr.aria-labelledby]=\"ariaLabelledby\"\n\t\t\t[attr.aria-checked]=\"checked\"\n\t\t\t(change)=\"onChange($event)\"\n\t\t\t(click)=\"onClick($event)\"\n\t\t\t(keyup.enter)=\"onClick($event)\">\n\t\t<label\n\t\t\tclass=\"bx--toggle-input__label\"\n\t\t\t[for]=\"id\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--skeleton': skeleton\n\t\t\t}\">\n\t\t\t<span class=\"bx--toggle__switch\">\n\t\t\t\t<span class=\"bx--toggle__text--off\">{{(!skeleton ? getOffText() : null) | async }}</span>\n\t\t\t\t<span class=\"bx--toggle__text--on\">{{(!skeleton ? getOnText() : null) | async}}</span>\n\t\t\t</span>\n\t\t</label>\n\t`,\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: Toggle,\n                        multi: true\n                    }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.I18n }]; }, { size: [{\n            type: Input\n        }], skeleton: [{\n            type: Input\n        }], formItem: [{\n            type: HostBinding,\n            args: [\"class.bx--form-item\"]\n        }], change: [{\n            type: Output\n        }], offText: [{\n            type: Input\n        }], onText: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }] }); })();\n\n// modules\nclass ToggleModule {\n}\nToggleModule.ɵfac = function ToggleModule_Factory(t) { return new (t || ToggleModule)(); };\nToggleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ToggleModule });\nToggleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        I18nModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToggleModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    Toggle\n                ],\n                exports: [\n                    Toggle\n                ],\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    I18nModule\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToggleModule, { declarations: function () { return [Toggle]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        I18nModule]; }, exports: function () { return [Toggle]; } }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ToggleState, ToggleChange, Toggle, ToggleModule };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}