{"ast":null,"code":"/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-skeleton.js\n *\n * Copyright 2014, 2022 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Component, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction SkeletonText_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"p\", 1);\n  }\n\n  if (rf & 2) {\n    const width_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵstyleProp(\"width\", width_r1);\n  }\n}\n\nclass SkeletonPlaceholder {}\n\nSkeletonPlaceholder.ɵfac = function SkeletonPlaceholder_Factory(t) {\n  return new (t || SkeletonPlaceholder)();\n};\n\nSkeletonPlaceholder.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: SkeletonPlaceholder,\n  selectors: [[\"ibm-skeleton-placeholder\"]],\n  decls: 1,\n  vars: 0,\n  consts: [[1, \"bx--skeleton__placeholder\"]],\n  template: function SkeletonPlaceholder_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SkeletonPlaceholder, [{\n    type: Component,\n    args: [{\n      selector: \"ibm-skeleton-placeholder\",\n      template: `\n\t\t<div class=\"bx--skeleton__placeholder\"></div>`\n    }]\n  }], null, null);\n})();\n\nclass SkeletonText {\n  constructor() {\n    this.lines = 5;\n    this.minLineWidth = 100;\n    this.maxLineWidth = 300;\n  }\n  /**\n   * Returns a random width in pixels based off a min width, and a max width.\n   */\n\n\n  getRandomInt(min, max) {\n    return `${Math.floor(Math.random() * (max - min + 1) + min) + \"px\"}`;\n  }\n\n  ngOnChanges() {\n    // Creates an array of length defined by input lines with content from\n    // 0 to lines - 1, maps each value to a random width in pixels.\n    this.lineWidths = Array.from(Array(this.lines).keys()).map(num => this.getRandomInt(this.minLineWidth, this.maxLineWidth));\n  }\n\n}\n\nSkeletonText.ɵfac = function SkeletonText_Factory(t) {\n  return new (t || SkeletonText)();\n};\n\nSkeletonText.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: SkeletonText,\n  selectors: [[\"ibm-skeleton-text\"]],\n  inputs: {\n    lines: \"lines\",\n    minLineWidth: \"minLineWidth\",\n    maxLineWidth: \"maxLineWidth\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"bx--skeleton__text\", 3, \"width\", 4, \"ngFor\", \"ngForOf\"], [1, \"bx--skeleton__text\"]],\n  template: function SkeletonText_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, SkeletonText_p_0_Template, 1, 2, \"p\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.lineWidths);\n    }\n  },\n  dependencies: [ɵngcc1.NgForOf],\n  encapsulation: 2\n});\nSkeletonText.propDecorators = {\n  lines: [{\n    type: Input\n  }],\n  minLineWidth: [{\n    type: Input\n  }],\n  maxLineWidth: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SkeletonText, [{\n    type: Component,\n    args: [{\n      selector: \"ibm-skeleton-text\",\n      template: `\n\t\t<p\n\t\t\t*ngFor=\"let width of lineWidths\"\n\t\t\tclass=\"bx--skeleton__text\"\n\t\t\t[style.width]=\"width\">\n\t\t</p>\n\t`\n    }]\n  }], function () {\n    return [];\n  }, {\n    lines: [{\n      type: Input\n    }],\n    minLineWidth: [{\n      type: Input\n    }],\n    maxLineWidth: [{\n      type: Input\n    }]\n  });\n})();\n\nclass SkeletonModule {}\n\nSkeletonModule.ɵfac = function SkeletonModule_Factory(t) {\n  return new (t || SkeletonModule)();\n};\n\nSkeletonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: SkeletonModule\n});\nSkeletonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SkeletonModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SkeletonPlaceholder, SkeletonText],\n      exports: [SkeletonPlaceholder, SkeletonText],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SkeletonModule, {\n    declarations: function () {\n      return [SkeletonPlaceholder, SkeletonText];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [SkeletonPlaceholder, SkeletonText];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { SkeletonPlaceholder, SkeletonText, SkeletonModule };","map":{"version":3,"names":["Component","Input","NgModule","CommonModule","ɵngcc0","ɵngcc1","SkeletonText_p_0_Template","rf","ctx","ɵɵelement","width_r1","$implicit","ɵɵstyleProp","SkeletonPlaceholder","ɵfac","SkeletonPlaceholder_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","SkeletonPlaceholder_Template","encapsulation","ngDevMode","ɵsetClassMetadata","args","selector","SkeletonText","constructor","lines","minLineWidth","maxLineWidth","getRandomInt","min","max","Math","floor","random","ngOnChanges","lineWidths","Array","from","keys","map","num","SkeletonText_Factory","inputs","features","ɵɵNgOnChangesFeature","SkeletonText_Template","ɵɵtemplate","ɵɵproperty","dependencies","NgForOf","propDecorators","SkeletonModule","SkeletonModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["/Users/TSC/Desktop/Angular-Carbon/carbon-tutorial-angular/node_modules/carbon-components-angular/__ivy_ngcc__/fesm2015/carbon-components-angular-skeleton.js"],"sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-skeleton.js\n *\n * Copyright 2014, 2022 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Component, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction SkeletonText_p_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"p\", 1);\n} if (rf & 2) {\n    const width_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵstyleProp(\"width\", width_r1);\n} }\nclass SkeletonPlaceholder {\n}\nSkeletonPlaceholder.ɵfac = function SkeletonPlaceholder_Factory(t) { return new (t || SkeletonPlaceholder)(); };\nSkeletonPlaceholder.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SkeletonPlaceholder, selectors: [[\"ibm-skeleton-placeholder\"]], decls: 1, vars: 0, consts: [[1, \"bx--skeleton__placeholder\"]], template: function SkeletonPlaceholder_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n    } }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SkeletonPlaceholder, [{\n        type: Component,\n        args: [{\n                selector: \"ibm-skeleton-placeholder\",\n                template: `\n\t\t<div class=\"bx--skeleton__placeholder\"></div>`\n            }]\n    }], null, null); })();\n\nclass SkeletonText {\n    constructor() {\n        this.lines = 5;\n        this.minLineWidth = 100;\n        this.maxLineWidth = 300;\n    }\n    /**\n     * Returns a random width in pixels based off a min width, and a max width.\n     */\n    getRandomInt(min, max) {\n        return `${Math.floor(Math.random() * (max - min + 1) + min) + \"px\"}`;\n    }\n    ngOnChanges() {\n        // Creates an array of length defined by input lines with content from\n        // 0 to lines - 1, maps each value to a random width in pixels.\n        this.lineWidths =\n            Array.from(Array(this.lines).keys())\n                .map(num => this.getRandomInt(this.minLineWidth, this.maxLineWidth));\n    }\n}\nSkeletonText.ɵfac = function SkeletonText_Factory(t) { return new (t || SkeletonText)(); };\nSkeletonText.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SkeletonText, selectors: [[\"ibm-skeleton-text\"]], inputs: { lines: \"lines\", minLineWidth: \"minLineWidth\", maxLineWidth: \"maxLineWidth\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"class\", \"bx--skeleton__text\", 3, \"width\", 4, \"ngFor\", \"ngForOf\"], [1, \"bx--skeleton__text\"]], template: function SkeletonText_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, SkeletonText_p_0_Template, 1, 2, \"p\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.lineWidths);\n    } }, dependencies: [ɵngcc1.NgForOf], encapsulation: 2 });\nSkeletonText.propDecorators = {\n    lines: [{ type: Input }],\n    minLineWidth: [{ type: Input }],\n    maxLineWidth: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SkeletonText, [{\n        type: Component,\n        args: [{\n                selector: \"ibm-skeleton-text\",\n                template: `\n\t\t<p\n\t\t\t*ngFor=\"let width of lineWidths\"\n\t\t\tclass=\"bx--skeleton__text\"\n\t\t\t[style.width]=\"width\">\n\t\t</p>\n\t`\n            }]\n    }], function () { return []; }, { lines: [{\n            type: Input\n        }], minLineWidth: [{\n            type: Input\n        }], maxLineWidth: [{\n            type: Input\n        }] }); })();\n\nclass SkeletonModule {\n}\nSkeletonModule.ɵfac = function SkeletonModule_Factory(t) { return new (t || SkeletonModule)(); };\nSkeletonModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: SkeletonModule });\nSkeletonModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SkeletonModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    SkeletonPlaceholder,\n                    SkeletonText\n                ],\n                exports: [\n                    SkeletonPlaceholder,\n                    SkeletonText\n                ],\n                imports: [\n                    CommonModule\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SkeletonModule, { declarations: function () { return [SkeletonPlaceholder, SkeletonText]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SkeletonPlaceholder, SkeletonText]; } }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SkeletonPlaceholder, SkeletonText, SkeletonModule };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}