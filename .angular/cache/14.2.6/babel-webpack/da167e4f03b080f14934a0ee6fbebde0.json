{"ast":null,"code":"/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-icon.js\n *\n * Copyright 2014, 2022 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { toString, getAttributes } from '@carbon/icon-helpers';\nimport { Injectable, Directive, ElementRef, Input, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport Add16 from '@carbon/icons/es/add/16';\nimport Add20 from '@carbon/icons/es/add/20';\nimport Bee16 from '@carbon/icons/es/bee/16';\nimport Bee20 from '@carbon/icons/es/bee/20';\nimport Calendar16 from '@carbon/icons/es/calendar/16';\nimport Carbon16 from '@carbon/icons/es/carbon/16';\nimport Carbon20 from '@carbon/icons/es/carbon/20';\nimport CaretDown16 from '@carbon/icons/es/caret--down/16';\nimport CaretLeft16 from '@carbon/icons/es/caret--left/16';\nimport CaretRight16 from '@carbon/icons/es/caret--right/16';\nimport CaretUp16 from '@carbon/icons/es/caret--up/16';\nimport Checkmark16 from '@carbon/icons/es/checkmark/16';\nimport CheckmarkFilled16 from '@carbon/icons/es/checkmark--filled/16';\nimport CheckmarkFilled20 from '@carbon/icons/es/checkmark--filled/20';\nimport CheckmarkOutline16 from '@carbon/icons/es/checkmark--outline/16';\nimport ChevronDown16 from '@carbon/icons/es/chevron--down/16';\nimport ChevronRight16 from '@carbon/icons/es/chevron--right/16';\nimport Close16 from '@carbon/icons/es/close/16';\nimport Close20 from '@carbon/icons/es/close/20';\nimport Copy16 from '@carbon/icons/es/copy/16';\nimport Copy20 from '@carbon/icons/es/copy/20';\nimport Data216 from '@carbon/icons/es/data--2/16';\nimport Data220 from '@carbon/icons/es/data--2/20';\nimport Delete16 from '@carbon/icons/es/delete/16';\nimport Document16 from '@carbon/icons/es/document/16';\nimport Document20 from '@carbon/icons/es/document/20';\nimport Download16 from '@carbon/icons/es/download/16';\nimport ErrorFilled16 from '@carbon/icons/es/error--filled/16';\nimport ErrorFilled20 from '@carbon/icons/es/error--filled/20';\nimport Fade16 from '@carbon/icons/es/fade/16';\nimport Fade20 from '@carbon/icons/es/fade/20';\nimport InformationFilled16 from '@carbon/icons/es/information--filled/16';\nimport InformationFilled20 from '@carbon/icons/es/information--filled/20';\nimport Menu16 from '@carbon/icons/es/menu/16';\nimport Menu20 from '@carbon/icons/es/menu/20';\nimport OverflowMenuVertical16 from '@carbon/icons/es/overflow-menu--vertical/16';\nimport OverflowMenuHorizontal16 from '@carbon/icons/es/overflow-menu--horizontal/16';\nimport Save16 from '@carbon/icons/es/save/16';\nimport Search16 from '@carbon/icons/es/search/16';\nimport Settings16 from '@carbon/icons/es/settings/16';\nimport SettingsAdjust16 from '@carbon/icons/es/settings--adjust/16';\nimport Subtract16 from '@carbon/icons/es/subtract/16';\nimport Warning16 from '@carbon/icons/es/warning/16';\nimport WarningFilled16 from '@carbon/icons/es/warning--filled/16';\nimport WarningFilled20 from '@carbon/icons/es/warning--filled/20';\nimport WarningAltFilled16 from '@carbon/icons/es/warning--alt--filled/16';\n/**\n * Abstract class that represent a cache of icons.\n *\n * The actual caching mechanism will be implementation specific,\n * but it's likely a good idea to key by the icons name and/or size.\n * Icon name and size will always be strings, and they will be the two consistent\n * identifiers of an icon. For the purposes of storage additonal descriptor properties may\n * be used, but the name and size are the only ones guarenteed to be passed for lookup purposes.\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nclass IconCache {}\n/**\n * Custom error for when a name can't be found\n */\n\n\nclass IconNameNotFoundError extends Error {\n  constructor(name) {\n    super(`Icon ${name} not found`);\n  }\n\n}\n/**\n * Custom error for when a specific size can't be found\n */\n\n\nclass IconSizeNotFoundError extends Error {\n  constructor(size, name) {\n    super(\"Size ${size} for ${name} not found\");\n  }\n\n}\n/**\n * Concrete implementation of `IconCache` as a simple in memory cache\n */\n\n\nclass IconMemoryCache extends IconCache {\n  constructor() {\n    super(...arguments);\n    this.iconMap = new Map();\n  }\n\n  get(name, size) {\n    if (!this.iconMap.has(name)) {\n      throw new IconNameNotFoundError(name);\n    }\n\n    const sizeMap = this.iconMap.get(name);\n\n    if (!sizeMap.has(size)) {\n      throw new IconSizeNotFoundError(size, name);\n    }\n\n    return sizeMap.get(size);\n  }\n\n  set(name, size, descriptor) {\n    if (!this.iconMap.has(name)) {\n      this.iconMap.set(name, new Map());\n    }\n\n    const sizeMap = this.iconMap.get(name);\n    sizeMap.set(size, descriptor);\n  }\n\n}\n/**\n * The icon service is a singleton service responsible for registering and retriving icons from `@carbon/icons`.\n *\n * It's important to register icons before use. It's reccommended to register your icons early, likely in your app.component.\n *\n * To allow for improved tree shaking _do not_ import all the icons from `@carbon/icons` and register them.\n * Instead register only the icons in use by your application. If your application makes use of lazy loaded\n * modules you may also lazy load the icons used in that module by registering them early on in that module.\n *\n * `ngOnInit` should be sufficiantly early to register icons.\n *\n * Example:\n * ```\n * import { Accessibility16 } from \"@carbon/icons\";\n *\n * // ...\n *\n * class MyComponent implements OnInit {\n * \tconstructor(protected iconService: IconService) {}\n *\n * \t// ...\n *\n * \tngOnInit() {\n * \t\tthis.iconService.register(Accessibility16);\n * \t}\n *\n * \t// ...\n * }\n * ```\n *\n * If needed it is possible to register an icon under a different name, via `registerAs`.\n */\n\n\nclass IconService {\n  constructor() {\n    this.iconCache = new IconMemoryCache();\n  }\n  /**\n   * Registers an array of icons based on the metadata provided by `@carbon/cions`\n   */\n\n\n  registerAll(descriptors) {\n    descriptors.forEach(icon => this.register(icon));\n  }\n  /**\n   * Registers an icon based on the metadata provided by `@carbon/icons`\n   */\n\n\n  register(descriptor) {\n    const {\n      name\n    } = descriptor;\n    this.registerAs(name, descriptor);\n  }\n  /**\n   * Registers an icon based on a uniqe name and metadata provided by `@carbon/icons`\n   */\n\n\n  registerAs(name, descriptor) {\n    const {\n      size\n    } = descriptor;\n    this.iconCache.set(name, size.toString(), descriptor);\n  }\n  /**\n   * Gets an icon, converts it to a string, and caches the result\n   */\n\n\n  get(name, size) {\n    try {\n      const icon = this.iconCache.get(name, size.toString());\n\n      if (!icon.svg) {\n        icon.svg = toString(icon);\n      }\n\n      return icon;\n    } catch (e) {\n      throw e;\n    }\n  }\n  /**\n   * Configure various service settings (caching strategy ...)\n   */\n\n\n  configure(options) {\n    this.iconCache = options.cache;\n  }\n\n}\n\nIconService.ɵfac = function IconService_Factory(t) {\n  return new (t || IconService)();\n};\n\nIconService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: IconService,\n  factory: IconService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * A directive for applying styling to an input element.\n *\n * Example:\n *\n * ```html\n * <input ibmText/>\n * ```\n *\n * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/text-input/code) for more detail.\n */\n\n\nclass IconDirective {\n  constructor(elementRef, iconService) {\n    this.elementRef = elementRef;\n    this.iconService = iconService;\n    this.ibmIcon = \"\";\n    this.size = \"16\";\n    this.title = \"\";\n    this.ariaLabel = \"\";\n    this.ariaLabelledBy = \"\";\n    this.ariaHidden = \"\";\n    this.isFocusable = false;\n  }\n\n  ngAfterViewInit() {\n    const root = this.elementRef.nativeElement;\n    let icon;\n\n    try {\n      icon = this.iconService.get(this.ibmIcon, this.size.toString());\n    } catch (error) {\n      console.warn(error); // bail out\n\n      return;\n    }\n\n    const domParser = new DOMParser();\n    const rawSVG = icon.svg;\n    const svgElement = domParser.parseFromString(rawSVG, \"image/svg+xml\").documentElement;\n    let node = root.tagName.toUpperCase() !== \"SVG\" ? svgElement : svgElement.firstChild;\n\n    while (node) {\n      // importNode makes a clone of the node\n      // this ensures we keep looping over the nodes in the parsed document\n      root.appendChild(root.ownerDocument.importNode(node, true)); // type the node because the angular compiler freaks out if it\n      // ends up thinking it's a `Node` instead of a `ChildNode`\n\n      node = node.nextSibling;\n    }\n\n    const svg = root.tagName.toUpperCase() !== \"SVG\" ? svgElement : root;\n    svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    const attributes = getAttributes({\n      width: icon.attrs.width,\n      height: icon.attrs.height,\n      viewBox: icon.attrs.viewBox,\n      title: this.title,\n      \"aria-label\": this.ariaLabel,\n      \"aria-labelledby\": this.ariaLabelledBy,\n      \"aria-hidden\": this.ariaHidden,\n      focusable: this.isFocusable.toString()\n    });\n    const attrKeys = Object.keys(attributes);\n\n    for (let i = 0; i < attrKeys.length; i++) {\n      const key = attrKeys[i];\n      const value = attributes[key];\n\n      if (key === \"title\") {\n        continue;\n      }\n\n      if (value) {\n        svg.setAttribute(key, value);\n      }\n    }\n\n    if (attributes[\"title\"]) {\n      const title = document.createElement(\"title\");\n      title.textContent = attributes.title;\n      IconDirective.titleIdCounter++;\n      title.setAttribute(\"id\", `${icon.name}-title-${IconDirective.titleIdCounter}`); // title must be first for screen readers\n\n      svg.insertBefore(title, svg.firstElementChild);\n      svg.setAttribute(\"aria-labelledby\", `${icon.name}-title-${IconDirective.titleIdCounter}`);\n    }\n  }\n\n}\n\nIconDirective.ɵfac = function IconDirective_Factory(t) {\n  return new (t || IconDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(IconService));\n};\n\nIconDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: IconDirective,\n  selectors: [[\"\", \"ibmIcon\", \"\"]],\n  inputs: {\n    ibmIcon: \"ibmIcon\",\n    size: \"size\",\n    title: \"title\",\n    ariaLabel: \"ariaLabel\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    ariaHidden: \"ariaHidden\",\n    isFocusable: \"isFocusable\"\n  }\n});\nIconDirective.titleIdCounter = 0;\n/** @nocollapse */\n\nIconDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: IconService\n}];\n\nIconDirective.propDecorators = {\n  ibmIcon: [{\n    type: Input\n  }],\n  size: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  ariaLabel: [{\n    type: Input\n  }],\n  ariaLabelledBy: [{\n    type: Input\n  }],\n  ariaHidden: [{\n    type: Input\n  }],\n  isFocusable: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconDirective, [{\n    type: Directive,\n    args: [{\n      selector: \"[ibmIcon]\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: IconService\n    }];\n  }, {\n    ibmIcon: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    ariaHidden: [{\n      type: Input\n    }],\n    isFocusable: [{\n      type: Input\n    }]\n  });\n})(); // modules\n// either provides a new instance of IconService, or returns the parent\n\n\nfunction ICON_SERVICE_PROVIDER_FACTORY(parentService) {\n  return parentService || new IconService();\n} // icon service *must* be a singleton to ensure that icons are accessible globally and not duplicated\n\n\nconst ICON_SERVICE_PROVIDER = {\n  provide: IconService,\n  deps: [[new Optional(), new SkipSelf(), IconService]],\n  useFactory: ICON_SERVICE_PROVIDER_FACTORY\n};\n\nclass IconModule {\n  constructor(iconService) {\n    this.iconService = iconService;\n    iconService.registerAll([Add16, Add20, Bee16, Bee20, Calendar16, Carbon16, Carbon20, CaretDown16, CaretLeft16, CaretRight16, CaretUp16, Checkmark16, CheckmarkFilled16, CheckmarkFilled20, CheckmarkOutline16, ChevronDown16, ChevronRight16, Close16, Close20, Copy16, Copy20, Data216, Data220, Delete16, Document16, Document20, Download16, ErrorFilled16, ErrorFilled20, Fade16, Fade20, InformationFilled16, InformationFilled20, Menu16, Menu20, OverflowMenuVertical16, OverflowMenuHorizontal16, Save16, Search16, Settings16, SettingsAdjust16, Subtract16, Warning16, WarningFilled16, WarningFilled20, WarningAltFilled16]);\n  }\n\n}\n\nIconModule.ɵfac = function IconModule_Factory(t) {\n  return new (t || IconModule)(ɵngcc0.ɵɵinject(IconService));\n};\n\nIconModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: IconModule\n});\nIconModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [ICON_SERVICE_PROVIDER],\n  imports: [CommonModule]\n});\n/** @nocollapse */\n\nIconModule.ctorParameters = () => [{\n  type: IconService\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [IconDirective],\n      exports: [IconDirective],\n      imports: [CommonModule],\n      providers: [ICON_SERVICE_PROVIDER]\n    }]\n  }], function () {\n    return [{\n      type: IconService\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IconModule, {\n    declarations: function () {\n      return [IconDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [IconDirective];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { IconDirective, ICON_SERVICE_PROVIDER, ICON_SERVICE_PROVIDER_FACTORY, IconModule, IconCache, IconMemoryCache, IconNameNotFoundError, IconService, IconSizeNotFoundError };","map":{"version":3,"names":["toString","getAttributes","Injectable","Directive","ElementRef","Input","NgModule","Optional","SkipSelf","CommonModule","Add16","Add20","Bee16","Bee20","Calendar16","Carbon16","Carbon20","CaretDown16","CaretLeft16","CaretRight16","CaretUp16","Checkmark16","CheckmarkFilled16","CheckmarkFilled20","CheckmarkOutline16","ChevronDown16","ChevronRight16","Close16","Close20","Copy16","Copy20","Data216","Data220","Delete16","Document16","Document20","Download16","ErrorFilled16","ErrorFilled20","Fade16","Fade20","InformationFilled16","InformationFilled20","Menu16","Menu20","OverflowMenuVertical16","OverflowMenuHorizontal16","Save16","Search16","Settings16","SettingsAdjust16","Subtract16","Warning16","WarningFilled16","WarningFilled20","WarningAltFilled16","ɵngcc0","IconCache","IconNameNotFoundError","Error","constructor","name","IconSizeNotFoundError","size","IconMemoryCache","arguments","iconMap","Map","get","has","sizeMap","set","descriptor","IconService","iconCache","registerAll","descriptors","forEach","icon","register","registerAs","svg","e","configure","options","cache","ɵfac","IconService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","IconDirective","elementRef","iconService","ibmIcon","title","ariaLabel","ariaLabelledBy","ariaHidden","isFocusable","ngAfterViewInit","root","nativeElement","error","console","warn","domParser","DOMParser","rawSVG","svgElement","parseFromString","documentElement","node","tagName","toUpperCase","firstChild","appendChild","ownerDocument","importNode","nextSibling","setAttribute","attributes","width","attrs","height","viewBox","focusable","attrKeys","Object","keys","i","length","key","value","document","createElement","textContent","titleIdCounter","insertBefore","firstElementChild","IconDirective_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","inputs","ctorParameters","propDecorators","args","selector","ICON_SERVICE_PROVIDER_FACTORY","parentService","ICON_SERVICE_PROVIDER","provide","deps","useFactory","IconModule","IconModule_Factory","ɵɵinject","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["/Users/TSC/Desktop/Angular-Carbon/carbon-tutorial-angular/node_modules/carbon-components-angular/__ivy_ngcc__/fesm2015/carbon-components-angular-icon.js"],"sourcesContent":["/**\n *\n * carbon-angular v0.0.0 | carbon-components-angular-icon.js\n *\n * Copyright 2014, 2022 IBM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { toString, getAttributes } from '@carbon/icon-helpers';\nimport { Injectable, Directive, ElementRef, Input, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport Add16 from '@carbon/icons/es/add/16';\nimport Add20 from '@carbon/icons/es/add/20';\nimport Bee16 from '@carbon/icons/es/bee/16';\nimport Bee20 from '@carbon/icons/es/bee/20';\nimport Calendar16 from '@carbon/icons/es/calendar/16';\nimport Carbon16 from '@carbon/icons/es/carbon/16';\nimport Carbon20 from '@carbon/icons/es/carbon/20';\nimport CaretDown16 from '@carbon/icons/es/caret--down/16';\nimport CaretLeft16 from '@carbon/icons/es/caret--left/16';\nimport CaretRight16 from '@carbon/icons/es/caret--right/16';\nimport CaretUp16 from '@carbon/icons/es/caret--up/16';\nimport Checkmark16 from '@carbon/icons/es/checkmark/16';\nimport CheckmarkFilled16 from '@carbon/icons/es/checkmark--filled/16';\nimport CheckmarkFilled20 from '@carbon/icons/es/checkmark--filled/20';\nimport CheckmarkOutline16 from '@carbon/icons/es/checkmark--outline/16';\nimport ChevronDown16 from '@carbon/icons/es/chevron--down/16';\nimport ChevronRight16 from '@carbon/icons/es/chevron--right/16';\nimport Close16 from '@carbon/icons/es/close/16';\nimport Close20 from '@carbon/icons/es/close/20';\nimport Copy16 from '@carbon/icons/es/copy/16';\nimport Copy20 from '@carbon/icons/es/copy/20';\nimport Data216 from '@carbon/icons/es/data--2/16';\nimport Data220 from '@carbon/icons/es/data--2/20';\nimport Delete16 from '@carbon/icons/es/delete/16';\nimport Document16 from '@carbon/icons/es/document/16';\nimport Document20 from '@carbon/icons/es/document/20';\nimport Download16 from '@carbon/icons/es/download/16';\nimport ErrorFilled16 from '@carbon/icons/es/error--filled/16';\nimport ErrorFilled20 from '@carbon/icons/es/error--filled/20';\nimport Fade16 from '@carbon/icons/es/fade/16';\nimport Fade20 from '@carbon/icons/es/fade/20';\nimport InformationFilled16 from '@carbon/icons/es/information--filled/16';\nimport InformationFilled20 from '@carbon/icons/es/information--filled/20';\nimport Menu16 from '@carbon/icons/es/menu/16';\nimport Menu20 from '@carbon/icons/es/menu/20';\nimport OverflowMenuVertical16 from '@carbon/icons/es/overflow-menu--vertical/16';\nimport OverflowMenuHorizontal16 from '@carbon/icons/es/overflow-menu--horizontal/16';\nimport Save16 from '@carbon/icons/es/save/16';\nimport Search16 from '@carbon/icons/es/search/16';\nimport Settings16 from '@carbon/icons/es/settings/16';\nimport SettingsAdjust16 from '@carbon/icons/es/settings--adjust/16';\nimport Subtract16 from '@carbon/icons/es/subtract/16';\nimport Warning16 from '@carbon/icons/es/warning/16';\nimport WarningFilled16 from '@carbon/icons/es/warning--filled/16';\nimport WarningFilled20 from '@carbon/icons/es/warning--filled/20';\nimport WarningAltFilled16 from '@carbon/icons/es/warning--alt--filled/16';\n\n/**\n * Abstract class that represent a cache of icons.\n *\n * The actual caching mechanism will be implementation specific,\n * but it's likely a good idea to key by the icons name and/or size.\n * Icon name and size will always be strings, and they will be the two consistent\n * identifiers of an icon. For the purposes of storage additonal descriptor properties may\n * be used, but the name and size are the only ones guarenteed to be passed for lookup purposes.\n */\nimport * as ɵngcc0 from '@angular/core';\nclass IconCache {\n}\n/**\n * Custom error for when a name can't be found\n */\nclass IconNameNotFoundError extends Error {\n    constructor(name) {\n        super(`Icon ${name} not found`);\n    }\n}\n/**\n * Custom error for when a specific size can't be found\n */\nclass IconSizeNotFoundError extends Error {\n    constructor(size, name) {\n        super(\"Size ${size} for ${name} not found\");\n    }\n}\n/**\n * Concrete implementation of `IconCache` as a simple in memory cache\n */\nclass IconMemoryCache extends IconCache {\n    constructor() {\n        super(...arguments);\n        this.iconMap = new Map();\n    }\n    get(name, size) {\n        if (!this.iconMap.has(name)) {\n            throw new IconNameNotFoundError(name);\n        }\n        const sizeMap = this.iconMap.get(name);\n        if (!sizeMap.has(size)) {\n            throw new IconSizeNotFoundError(size, name);\n        }\n        return sizeMap.get(size);\n    }\n    set(name, size, descriptor) {\n        if (!this.iconMap.has(name)) {\n            this.iconMap.set(name, new Map());\n        }\n        const sizeMap = this.iconMap.get(name);\n        sizeMap.set(size, descriptor);\n    }\n}\n/**\n * The icon service is a singleton service responsible for registering and retriving icons from `@carbon/icons`.\n *\n * It's important to register icons before use. It's reccommended to register your icons early, likely in your app.component.\n *\n * To allow for improved tree shaking _do not_ import all the icons from `@carbon/icons` and register them.\n * Instead register only the icons in use by your application. If your application makes use of lazy loaded\n * modules you may also lazy load the icons used in that module by registering them early on in that module.\n *\n * `ngOnInit` should be sufficiantly early to register icons.\n *\n * Example:\n * ```\n * import { Accessibility16 } from \"@carbon/icons\";\n *\n * // ...\n *\n * class MyComponent implements OnInit {\n * \tconstructor(protected iconService: IconService) {}\n *\n * \t// ...\n *\n * \tngOnInit() {\n * \t\tthis.iconService.register(Accessibility16);\n * \t}\n *\n * \t// ...\n * }\n * ```\n *\n * If needed it is possible to register an icon under a different name, via `registerAs`.\n */\nclass IconService {\n    constructor() {\n        this.iconCache = new IconMemoryCache();\n    }\n    /**\n     * Registers an array of icons based on the metadata provided by `@carbon/cions`\n     */\n    registerAll(descriptors) {\n        descriptors.forEach(icon => this.register(icon));\n    }\n    /**\n     * Registers an icon based on the metadata provided by `@carbon/icons`\n     */\n    register(descriptor) {\n        const { name } = descriptor;\n        this.registerAs(name, descriptor);\n    }\n    /**\n     * Registers an icon based on a uniqe name and metadata provided by `@carbon/icons`\n     */\n    registerAs(name, descriptor) {\n        const { size } = descriptor;\n        this.iconCache.set(name, size.toString(), descriptor);\n    }\n    /**\n     * Gets an icon, converts it to a string, and caches the result\n     */\n    get(name, size) {\n        try {\n            const icon = this.iconCache.get(name, size.toString());\n            if (!icon.svg) {\n                icon.svg = toString(icon);\n            }\n            return icon;\n        }\n        catch (e) {\n            throw e;\n        }\n    }\n    /**\n     * Configure various service settings (caching strategy ...)\n     */\n    configure(options) {\n        this.iconCache = options.cache;\n    }\n}\nIconService.ɵfac = function IconService_Factory(t) { return new (t || IconService)(); };\nIconService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: IconService, factory: IconService.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\n/**\n * A directive for applying styling to an input element.\n *\n * Example:\n *\n * ```html\n * <input ibmText/>\n * ```\n *\n * See the [vanilla carbon docs](http://www.carbondesignsystem.com/components/text-input/code) for more detail.\n */\nclass IconDirective {\n    constructor(elementRef, iconService) {\n        this.elementRef = elementRef;\n        this.iconService = iconService;\n        this.ibmIcon = \"\";\n        this.size = \"16\";\n        this.title = \"\";\n        this.ariaLabel = \"\";\n        this.ariaLabelledBy = \"\";\n        this.ariaHidden = \"\";\n        this.isFocusable = false;\n    }\n    ngAfterViewInit() {\n        const root = this.elementRef.nativeElement;\n        let icon;\n        try {\n            icon = this.iconService.get(this.ibmIcon, this.size.toString());\n        }\n        catch (error) {\n            console.warn(error);\n            // bail out\n            return;\n        }\n        const domParser = new DOMParser();\n        const rawSVG = icon.svg;\n        const svgElement = domParser.parseFromString(rawSVG, \"image/svg+xml\").documentElement;\n        let node = root.tagName.toUpperCase() !== \"SVG\" ? svgElement : svgElement.firstChild;\n        while (node) {\n            // importNode makes a clone of the node\n            // this ensures we keep looping over the nodes in the parsed document\n            root.appendChild(root.ownerDocument.importNode(node, true));\n            // type the node because the angular compiler freaks out if it\n            // ends up thinking it's a `Node` instead of a `ChildNode`\n            node = node.nextSibling;\n        }\n        const svg = root.tagName.toUpperCase() !== \"SVG\" ? svgElement : root;\n        svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n        const attributes = getAttributes({\n            width: icon.attrs.width,\n            height: icon.attrs.height,\n            viewBox: icon.attrs.viewBox,\n            title: this.title,\n            \"aria-label\": this.ariaLabel,\n            \"aria-labelledby\": this.ariaLabelledBy,\n            \"aria-hidden\": this.ariaHidden,\n            focusable: this.isFocusable.toString()\n        });\n        const attrKeys = Object.keys(attributes);\n        for (let i = 0; i < attrKeys.length; i++) {\n            const key = attrKeys[i];\n            const value = attributes[key];\n            if (key === \"title\") {\n                continue;\n            }\n            if (value) {\n                svg.setAttribute(key, value);\n            }\n        }\n        if (attributes[\"title\"]) {\n            const title = document.createElement(\"title\");\n            title.textContent = attributes.title;\n            IconDirective.titleIdCounter++;\n            title.setAttribute(\"id\", `${icon.name}-title-${IconDirective.titleIdCounter}`);\n            // title must be first for screen readers\n            svg.insertBefore(title, svg.firstElementChild);\n            svg.setAttribute(\"aria-labelledby\", `${icon.name}-title-${IconDirective.titleIdCounter}`);\n        }\n    }\n}\nIconDirective.ɵfac = function IconDirective_Factory(t) { return new (t || IconDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(IconService)); };\nIconDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: IconDirective, selectors: [[\"\", \"ibmIcon\", \"\"]], inputs: { ibmIcon: \"ibmIcon\", size: \"size\", title: \"title\", ariaLabel: \"ariaLabel\", ariaLabelledBy: \"ariaLabelledBy\", ariaHidden: \"ariaHidden\", isFocusable: \"isFocusable\" } });\nIconDirective.titleIdCounter = 0;\n/** @nocollapse */\nIconDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: IconService }\n];\nIconDirective.propDecorators = {\n    ibmIcon: [{ type: Input }],\n    size: [{ type: Input }],\n    title: [{ type: Input }],\n    ariaLabel: [{ type: Input }],\n    ariaLabelledBy: [{ type: Input }],\n    ariaHidden: [{ type: Input }],\n    isFocusable: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconDirective, [{\n        type: Directive,\n        args: [{\n                selector: \"[ibmIcon]\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: IconService }]; }, { ibmIcon: [{\n            type: Input\n        }], size: [{\n            type: Input\n        }], title: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input\n        }], ariaLabelledBy: [{\n            type: Input\n        }], ariaHidden: [{\n            type: Input\n        }], isFocusable: [{\n            type: Input\n        }] }); })();\n\n// modules\n// either provides a new instance of IconService, or returns the parent\nfunction ICON_SERVICE_PROVIDER_FACTORY(parentService) {\n    return parentService || new IconService();\n}\n// icon service *must* be a singleton to ensure that icons are accessible globally and not duplicated\nconst ICON_SERVICE_PROVIDER = {\n    provide: IconService,\n    deps: [[new Optional(), new SkipSelf(), IconService]],\n    useFactory: ICON_SERVICE_PROVIDER_FACTORY\n};\nclass IconModule {\n    constructor(iconService) {\n        this.iconService = iconService;\n        iconService.registerAll([\n            Add16,\n            Add20,\n            Bee16,\n            Bee20,\n            Calendar16,\n            Carbon16,\n            Carbon20,\n            CaretDown16,\n            CaretLeft16,\n            CaretRight16,\n            CaretUp16,\n            Checkmark16,\n            CheckmarkFilled16,\n            CheckmarkFilled20,\n            CheckmarkOutline16,\n            ChevronDown16,\n            ChevronRight16,\n            Close16,\n            Close20,\n            Copy16,\n            Copy20,\n            Data216,\n            Data220,\n            Delete16,\n            Document16,\n            Document20,\n            Download16,\n            ErrorFilled16,\n            ErrorFilled20,\n            Fade16,\n            Fade20,\n            InformationFilled16,\n            InformationFilled20,\n            Menu16,\n            Menu20,\n            OverflowMenuVertical16,\n            OverflowMenuHorizontal16,\n            Save16,\n            Search16,\n            Settings16,\n            SettingsAdjust16,\n            Subtract16,\n            Warning16,\n            WarningFilled16,\n            WarningFilled20,\n            WarningAltFilled16\n        ]);\n    }\n}\nIconModule.ɵfac = function IconModule_Factory(t) { return new (t || IconModule)(ɵngcc0.ɵɵinject(IconService)); };\nIconModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: IconModule });\nIconModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        ICON_SERVICE_PROVIDER\n    ], imports: [CommonModule] });\n/** @nocollapse */\nIconModule.ctorParameters = () => [\n    { type: IconService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    IconDirective\n                ],\n                exports: [\n                    IconDirective\n                ],\n                imports: [\n                    CommonModule\n                ],\n                providers: [\n                    ICON_SERVICE_PROVIDER\n                ]\n            }]\n    }], function () { return [{ type: IconService }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IconModule, { declarations: function () { return [IconDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [IconDirective]; } }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { IconDirective, ICON_SERVICE_PROVIDER, ICON_SERVICE_PROVIDER_FACTORY, IconModule, IconCache, IconMemoryCache, IconNameNotFoundError, IconService, IconSizeNotFoundError };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}